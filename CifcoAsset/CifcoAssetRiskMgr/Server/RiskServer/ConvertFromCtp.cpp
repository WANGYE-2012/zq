#include "StdAfx.h"
#include "Hash.h"
#include "ConvertFromCtp.h"
#pragma warning( disable : 4996 )
#ifdef SAFESTRCOPY
	#undef SAFESTRCOPY
#endif
#define SAFESTRCOPY(tag)	safestrcpy(risk.tag,sizeof(risk.tag),ctp.tag)
#ifdef VALUEEQU
	#undef VALUEEQU
#endif
#define VALUEEQU(tag)		risk.tag=ctp.tag
extern CStringPair* g_StringPair;
ConvertFromCtp::ConvertFromCtp(void)
{
}

ConvertFromCtp::~ConvertFromCtp(void)
{
}
void ConvertFromCtp::GetBrokerDepositField(const CShfeFtdcBrokerDepositField& ctp,BrokerDepositField& risk)	
{	
	///交易日期
	SAFESTRCOPY(TradingDay);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///会员代码
	SAFESTRCOPY(ParticipantID);		
	///交易所代码
	SAFESTRCOPY(ExchangeID);		
	///上次结算准备金
	VALUEEQU(PreBalance);		
	///当前保证金总额
	VALUEEQU(CurrMargin);		
	///平仓盈亏
	VALUEEQU(CloseProfit);		
	///期货结算准备金
	VALUEEQU(Balance);		
	///入金金额
	VALUEEQU(Deposit);		
	///出金金额
	VALUEEQU(Withdraw);		
	///可提资金
	VALUEEQU(Available);		
	///基本准备金
	VALUEEQU(Reserve);		
	///冻结的保证金
	VALUEEQU(FrozenMargin);		
}	
void ConvertFromCtp::GetBrokerInvestorField(const CShfeFtdcBrokerInvestorField& ctp,BrokerInvestorField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
}	
void ConvertFromCtp::GetCurrentTimeField(const CShfeFtdcCurrentTimeField& ctp,CurrentTimeField& risk)	
{	
	///当前日期
	SAFESTRCOPY(CurrDate);		
	///当前时间
	SAFESTRCOPY(CurrTime);		
	///当前时间（毫秒）
	VALUEEQU(CurrMillisec);		
}	
void ConvertFromCtp::GetDepartmentField(const CShfeFtdcDepartmentField& ctp,DepartmentField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///组织架构代码
	SAFESTRCOPY(DepartmentID);		
	///组织架构名称
	SAFESTRCOPY(DepartmentName);		
}	
void ConvertFromCtp::GetDepthMarketDataField(const CShfeFtdcDepthMarketDataField& ctp,DepthMarketDataField& risk)	
{	
	///交易日
	SAFESTRCOPY(TradingDay);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///交易所代码
	SAFESTRCOPY(ExchangeID);		
	///合约在交易所的代码
	SAFESTRCOPY(ExchangeInstID);		
	///最新价
	VALUEEQU(LastPrice);		
	///上次结算价
	VALUEEQU(PreSettlementPrice);		
	///昨收盘
	VALUEEQU(PreClosePrice);		
	///昨持仓量
	VALUEEQU(PreOpenInterest);		
	///今开盘
	VALUEEQU(OpenPrice);		
	///最高价
	VALUEEQU(HighestPrice);		
	///最低价
	VALUEEQU(LowestPrice);		
	///数量
	VALUEEQU(Volume);		
	///成交金额
	VALUEEQU(Turnover);		
	///持仓量
	VALUEEQU(OpenInterest);		
	///今收盘
	VALUEEQU(ClosePrice);		
	///本次结算价
	VALUEEQU(SettlementPrice);		
	///涨停板价
	VALUEEQU(UpperLimitPrice);		
	///跌停板价
	VALUEEQU(LowerLimitPrice);		
	///昨虚实度
	VALUEEQU(PreDelta);		
	///今虚实度
	VALUEEQU(CurrDelta);		
	///最后修改时间
	SAFESTRCOPY(UpdateTime);		
	///最后修改毫秒
	VALUEEQU(UpdateMillisec);		
	///申买价一
	VALUEEQU(BidPrice1);		
	///申买量一
	VALUEEQU(BidVolume1);		
	///申卖价一
	VALUEEQU(AskPrice1);		
	///申卖量一
	VALUEEQU(AskVolume1);		
	///申买价二
	VALUEEQU(BidPrice2);		
	///申买量二
	VALUEEQU(BidVolume2);		
	///申卖价二
	VALUEEQU(AskPrice2);		
	///申卖量二
	VALUEEQU(AskVolume2);		
	///申买价三
	VALUEEQU(BidPrice3);		
	///申买量三
	VALUEEQU(BidVolume3);		
	///申卖价三
	VALUEEQU(AskPrice3);		
	///申卖量三
	VALUEEQU(AskVolume3);		
	///申买价四
	VALUEEQU(BidPrice4);		
	///申买量四
	VALUEEQU(BidVolume4);		
	///申卖价四
	VALUEEQU(AskPrice4);		
	///申卖量四
	VALUEEQU(AskVolume4);		
	///申买价五
	VALUEEQU(BidPrice5);		
	///申买量五
	VALUEEQU(BidVolume5);		
	///申卖价五
	VALUEEQU(AskPrice5);		
	///申卖量五
	VALUEEQU(AskVolume5);		
	///当日均价
	VALUEEQU(AveragePrice);		
}	
void ConvertFromCtp::GetExchangeField(const CShfeFtdcExchangeField& ctp,ExchangeField& risk)	
{	
	///交易所代码
	SAFESTRCOPY(ExchangeID);		
	///交易所名称
	SAFESTRCOPY(ExchangeName);		
	///交易所属性
	VALUEEQU(ExchangeProperty);		
}	
void ConvertFromCtp::GetExchangeMarginRateField(const CShfeFtdcExchangeMarginRateField& ctp,ExchangeMarginRateField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///投机套保标志
	VALUEEQU(HedgeFlag);		
	///多头保证金率
	VALUEEQU(LongMarginRatioByMoney);		
	///多头保证金费
	VALUEEQU(LongMarginRatioByVolume);		
	///空头保证金率
	VALUEEQU(ShortMarginRatioByMoney);		
	///空头保证金费
	VALUEEQU(ShortMarginRatioByVolume);		
}	
void ConvertFromCtp::GetExchangeMarginRateAdjustField(const CShfeFtdcExchangeMarginRateAdjustField& ctp,ExchangeMarginRateAdjustField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///投机套保标志
	VALUEEQU(HedgeFlag);		
	///跟随交易所投资者多头保证金率
	VALUEEQU(LongMarginRatioByMoney);		
	///跟随交易所投资者多头保证金费
	VALUEEQU(LongMarginRatioByVolume);		
	///跟随交易所投资者空头保证金率
	VALUEEQU(ShortMarginRatioByMoney);		
	///跟随交易所投资者空头保证金费
	VALUEEQU(ShortMarginRatioByVolume);		
	///交易所多头保证金率
	VALUEEQU(ExchLongMarginRatioByMoney);		
	///交易所多头保证金费
	VALUEEQU(ExchLongMarginRatioByVolume);		
	///交易所空头保证金率
	VALUEEQU(ExchShortMarginRatioByMoney);		
	///交易所空头保证金费
	VALUEEQU(ExchShortMarginRatioByVolume);		
	///不跟随交易所投资者多头保证金率
	VALUEEQU(NoLongMarginRatioByMoney);		
	///不跟随交易所投资者多头保证金费
	VALUEEQU(NoLongMarginRatioByVolume);		
	///不跟随交易所投资者空头保证金率
	VALUEEQU(NoShortMarginRatioByMoney);		
	///不跟随交易所投资者空头保证金费
	VALUEEQU(NoShortMarginRatioByVolume);		
}	
void ConvertFromCtp::GetFullIndexNPPField(const CShfeFtdcFullIndexNPPField& ctp,FullIndexNPPField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///产品代码
	SAFESTRCOPY(ProductIDs);		
	///报警值(在参数中是警示值,在指标FullIndexNPP中是指标值)
	VALUEEQU(WarnLevel);		
	///多头保证金
	VALUEEQU(LongMargin);		
	///空头保证金
	VALUEEQU(ShortMargin);		
	///总权益
	VALUEEQU(Balance);		
	///报警阈值
	VALUEEQU(RealWarnLevel);		
}	
void ConvertFromCtp::GetIndexNPPField(const CShfeFtdcIndexNPPField& ctp,IndexNPPField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///产品代码
	SAFESTRCOPY(ProductIDs);		
	///报警值(在参数中是警示值,在指标FullIndexNPP中是指标值)
	VALUEEQU(WarnLevel);		
}	
void ConvertFromCtp::GetInputOrderField(const CShfeFtdcInputOrderField& ctp,InputOrderField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///报单引用
	SAFESTRCOPY(OrderRef);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///报单价格条件
	VALUEEQU(OrderPriceType);		
	///买卖方向
	VALUEEQU(Direction);		
	///组合开平标志
	SAFESTRCOPY(CombOffsetFlag);		
	///组合投机套保标志
	SAFESTRCOPY(CombHedgeFlag);		
	///价格
	VALUEEQU(LimitPrice);		
	///数量
	VALUEEQU(VolumeTotalOriginal);		
	///有效期类型
	VALUEEQU(TimeCondition);		
	///GTD日期
	SAFESTRCOPY(GTDDate);		
	///成交量类型
	VALUEEQU(VolumeCondition);		
	///最小成交量
	VALUEEQU(MinVolume);		
	///触发条件
	VALUEEQU(ContingentCondition);		
	///止损价
	VALUEEQU(StopPrice);		
	///强平原因
	VALUEEQU(ForceCloseReason);		
	///自动挂起标志
	VALUEEQU(IsAutoSuspend);		
	///业务单元
	SAFESTRCOPY(BusinessUnit);		
	///请求编号
	VALUEEQU(RequestID);		
	///用户强评标志
	VALUEEQU(UserForceClose);		
}	
void ConvertFromCtp::GetInputOrderActionField(const CShfeFtdcInputOrderActionField& ctp,InputOrderActionField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///报单操作引用
	VALUEEQU(OrderActionRef);		
	///报单引用
	SAFESTRCOPY(OrderRef);		
	///请求编号
	VALUEEQU(RequestID);		
	///前置编号
	VALUEEQU(FrontID);		
	///会话编号
	VALUEEQU(SessionID);		
	///交易所代码
	SAFESTRCOPY(ExchangeID);		
	///报单编号
	SAFESTRCOPY(OrderSysID);		
	///操作标志
	VALUEEQU(ActionFlag);		
	///价格
	VALUEEQU(LimitPrice);		
	///数量变化
	VALUEEQU(VolumeChange);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
}	
void ConvertFromCtp::GetInstrumentField(const CShfeFtdcInstrumentField& ctp,InstrumentField& risk)	
{	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///交易所代码
	SAFESTRCOPY(ExchangeID);		
	///合约名称
	SAFESTRCOPY(InstrumentName);		
	///合约在交易所的代码
	SAFESTRCOPY(ExchangeInstID);		
	///产品代码
	SAFESTRCOPY(ProductID);		
	///产品类型
	VALUEEQU(ProductClass);		
	///交割年份
	VALUEEQU(DeliveryYear);		
	///交割月
	VALUEEQU(DeliveryMonth);		
	///市价单最大下单量
	VALUEEQU(MaxMarketOrderVolume);		
	///市价单最小下单量
	VALUEEQU(MinMarketOrderVolume);		
	///限价单最大下单量
	VALUEEQU(MaxLimitOrderVolume);		
	///限价单最小下单量
	VALUEEQU(MinLimitOrderVolume);		
	///合约数量乘数
	VALUEEQU(VolumeMultiple);		
	///最小变动价位
	VALUEEQU(PriceTick);		
	///创建日
	SAFESTRCOPY(CreateDate);		
	///上市日
	SAFESTRCOPY(OpenDate);		
	///到期日
	SAFESTRCOPY(ExpireDate);		
	///开始交割日
	SAFESTRCOPY(StartDelivDate);		
	///结束交割日
	SAFESTRCOPY(EndDelivDate);		
	///合约生命周期状态
	VALUEEQU(InstLifePhase);		
	///当前是否交易
	VALUEEQU(IsTrading);		
	///持仓类型
	VALUEEQU(PositionType);		
	///持仓日期类型
	VALUEEQU(PositionDateType);		
	///多头保证金率
	VALUEEQU(LongMarginRatio);		
	///空头保证金率
	VALUEEQU(ShortMarginRatio);		
}	
void ConvertFromCtp::GetInvestorDepartmentFlatField(const CShfeFtdcInvestorDepartmentFlatField& ctp,InvestorDepartmentFlatField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///组织架构代码
	SAFESTRCOPY(DepartmentID);		
}	
void ConvertFromCtp::GetInvestorGroupField(const CShfeFtdcInvestorGroupField& ctp,InvestorGroupField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者分组代码
	SAFESTRCOPY(InvestorGroupID);		
	///投资者分组名称
	SAFESTRCOPY(InvestorGroupName);		
}	
void ConvertFromCtp::GetInvestorHashField(const CShfeFtdcInvestorHashField& ctp,InvestorHashField& risk)	
{	
	///请求中是业务类型，否则是数据MD5值
	SAFESTRCOPY(MD5);		
	///投资者代码(为空代表所有投资者代码)
	SAFESTRCOPY(InvestorIDBeg);		
	///投资者代码(为空代表所有投资者代码)
	SAFESTRCOPY(InvestorIDEnd);		
}	
void ConvertFromCtp::GetInvestorLinkManField(const CShfeFtdcInvestorLinkManField& ctp,InvestorLinkManField& risk)	
{	
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者分组代码
	SAFESTRCOPY(InvestorGroupID);		
	///投资者名称
	SAFESTRCOPY(InvestorName);		
	///证件类型
	VALUEEQU(IdentifiedCardType);		
	///证件号码
	SAFESTRCOPY(IdentifiedCardNo);		
	///是否活跃
	VALUEEQU(IsActive);		
	///联系电话
	SAFESTRCOPY(Telephone);		
	///通讯地址
	SAFESTRCOPY(Address);		
	///指定下单人证件类型
	VALUEEQU(OrderManIdentifiedCardType);		
	///指定下单人证件号码
	SAFESTRCOPY(OrderManIdentifiedCardNo);		
	///指定下单人名称
	SAFESTRCOPY(OrderManPersonName);		
	///指定下单人联系电话
	SAFESTRCOPY(OrderManTelephone);		
	///指定下单人通讯地址
	SAFESTRCOPY(OrderManAddress);		
	///指定下单人邮政编码
	SAFESTRCOPY(OrderManZipCode);		
	///资金调拨人证件类型
	VALUEEQU(FundManIdentifiedCardType);		
	///资金调拨人证件号码
	SAFESTRCOPY(FundManIdentifiedCardNo);		
	///资金调拨人名称
	SAFESTRCOPY(FundManPersonName);		
	///资金调拨人联系电话
	SAFESTRCOPY(FundManTelephone);		
	///资金调拨人通讯地址
	SAFESTRCOPY(FundManAddress);		
	///资金调拨人邮政编码
	SAFESTRCOPY(FundManZipCode);		
	///开户授权人证件类型
	VALUEEQU(OpenManIdentifiedCardType);		
	///开户授权人证件号码
	SAFESTRCOPY(OpenManIdentifiedCardNo);		
	///开户授权人名称
	SAFESTRCOPY(OpenManPersonName);		
	///开户授权人联系电话
	SAFESTRCOPY(OpenManTelephone);		
	///开户授权人通讯地址
	SAFESTRCOPY(OpenManAddress);		
	///开户授权人邮政编码
	SAFESTRCOPY(OpenManZipCode);		
	///结算单确认人证件类型
	VALUEEQU(SettlementManIdentifiedCardType);		
	///结算单确认人证件号码
	SAFESTRCOPY(SettlementManIdentifiedCardNo);		
	///结算单确认人名称
	SAFESTRCOPY(SettlementManPersonName);		
	///结算单确认人联系电话
	SAFESTRCOPY(SettlementManTelephone);		
	///结算单确认人通讯地址
	SAFESTRCOPY(SettlementManAddress);		
	///结算单确认人邮政编码
	SAFESTRCOPY(SettlementManZipCode);		
	///开户日期
	SAFESTRCOPY(OpenDate);		
	///手机
	SAFESTRCOPY(Mobile);		
	///电子邮件
	SAFESTRCOPY(EMail);		
	///投资者类型
	VALUEEQU(InvestorType);		
	///国家代码
	SAFESTRCOPY(PhoneCountryCode);		
	///区号
	SAFESTRCOPY(PhoneAreaCode);		
	///开户授权人国家代码
	SAFESTRCOPY(OpenPhoneCountryCode);		
	///开户授权人区号
	SAFESTRCOPY(OpenPhoneAreaCode);		
	///指定下单人国家代码
	SAFESTRCOPY(OrderPhoneCountryCode);		
	///指定下单人区号
	SAFESTRCOPY(OrderPhoneAreaCode);		
	///资金调拨人国家代码
	SAFESTRCOPY(FundPhoneCountryCode);		
	///资金调拨人区号
	SAFESTRCOPY(FundPhoneAreaCode);		
	///结算单确认人国家代码
	SAFESTRCOPY(SettlePhoneCountryCode);		
	///结算单确认人区号
	SAFESTRCOPY(SettlePhoneAreaCode);		
}	
void ConvertFromCtp::GetInvestorMarginRateField(const CShfeFtdcInvestorMarginRateField& ctp,InvestorMarginRateField& risk)	
{	
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///投资者范围
	VALUEEQU(InvestorRange);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///投机套保标志
	VALUEEQU(HedgeFlag);		
	///多头保证金率
	VALUEEQU(LongMarginRatioByMoney);		
	///多头保证金费
	VALUEEQU(LongMarginRatioByVolume);		
	///空头保证金率
	VALUEEQU(ShortMarginRatioByMoney);		
	///空头保证金费
	VALUEEQU(ShortMarginRatioByVolume);		
}	
void ConvertFromCtp::GetInvestorPatternField(const CShfeFtdcInvestorPatternField& ctp,InvestorPatternField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///业务类型
	SAFESTRCOPY(BizType);		
	///通知途径
	VALUEEQU(Method);		
	///模板代码
	VALUEEQU(PatternID);		
	///是否启用
	VALUEEQU(IsActive);		
}	
void ConvertFromCtp::GetInvestorPositionStaticField(const CShfeFtdcInvestorPositionStaticField& ctp,InvestorPositionStaticField& risk)	
{	
	///产品代码
	SAFESTRCOPY(ProductID);		
	///合约编号
	SAFESTRCOPY(InstrumentID);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///昨持仓
	VALUEEQU(YdPosition);		
	///总持仓
	VALUEEQU(Position);		
	///多头持仓
	VALUEEQU(LongPosition);		
	///空头持仓
	VALUEEQU(ShortPosition);		
	///净持仓
	VALUEEQU(NetPosition);		
	///投机多头持仓
	VALUEEQU(SpecuLongPosi);		
	///投机空头持仓
	VALUEEQU(SpecuShortPosi);		
	///保值多头持仓
	VALUEEQU(HedgeLongPosi);		
	///保值空头持仓
	VALUEEQU(HedgeShortPosi);		
	///今仓
	VALUEEQU(TodayPosition);		
	///总持仓成本
	VALUEEQU(PositionCost);		
}	
void ConvertFromCtp::GetInvestorRiskAccountField(const CShfeFtdcInvestorRiskAccountField& ctp,InvestorRiskAccountField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///投资者帐号
	SAFESTRCOPY(AccountID);		
	///上次质押金额
	VALUEEQU(PreMortgage);		
	///上次信用额度
	VALUEEQU(PreCredit);		
	///上次存款额
	VALUEEQU(PreDeposit);		
	///上次总权益
	VALUEEQU(PreBalance);		
	///上次占用的保证金
	VALUEEQU(PreMargin);		
	///出入金金额
	VALUEEQU(Withdraw);		
	///当前保证金总额
	VALUEEQU(CurrMargin);		
	///手续费
	VALUEEQU(Commission);		
	///平仓盈亏
	VALUEEQU(CloseProfit);		
	///持仓盈亏
	VALUEEQU(PositionProfit);		
	///总权益
	VALUEEQU(Balance);		
	///可用资金
	VALUEEQU(Available);		
	///质押金额
	VALUEEQU(Mortgage);		
	///交易所保证金
	VALUEEQU(ExchangeMargin);		
	///基本准备金
	VALUEEQU(Reserve);		
	///可取资金
	VALUEEQU(WithdrawQuota);		
	///信用额度
	VALUEEQU(Credit);		
	///上次交易所保证金
	VALUEEQU(PreExchMargin);		
	///历史强平次数
	VALUEEQU(ForceCloseStat);		
	///投资者交割保证金
	VALUEEQU(DeliveryMargin);		
	///交易所交割保证金
	VALUEEQU(ExchangeDeliveryMargin);		
	///保证金冻结
	VALUEEQU(FrozenMargin);		
	///手续费冻结
	VALUEEQU(FrozenCommission);		
}	
void ConvertFromCtp::GetInvestorSumInfoField(const CShfeFtdcInvestorSumInfoField& ctp,InvestorSumInfoField& risk)	
{	
	///投资者人数
	VALUEEQU(Count);		
	///MD5校验码1
	VALUEEQU(md5_1);		
	///MD5校验码2
	VALUEEQU(md5_2);		
	///MD5校验码3
	VALUEEQU(md5_3);		
	///MD5校验码4
	VALUEEQU(md5_4);		
	///MD5校验码5
	VALUEEQU(md5_5);		
	///MD5校验码6
	VALUEEQU(md5_6);		
	///MD5校验码7
	VALUEEQU(md5_7);		
	///MD5校验码8
	VALUEEQU(md5_8);		
	///MD5校验码9
	VALUEEQU(md5_9);		
	///MD5校验码10
	VALUEEQU(md5_10);		
	///MD5校验码11
	VALUEEQU(md5_11);		
	///MD5校验码12
	VALUEEQU(md5_12);		
	///MD5校验码13
	VALUEEQU(md5_13);		
	///MD5校验码14
	VALUEEQU(md5_14);		
	///MD5校验码15
	VALUEEQU(md5_15);		
	///MD5校验码16
	VALUEEQU(md5_16);		
}	
void ConvertFromCtp::GetInvestorTradeStaticField(const CShfeFtdcInvestorTradeStaticField& ctp,InvestorTradeStaticField& risk)	
{	
	///产品代码
	SAFESTRCOPY(ProductID);		
	///合约编号
	SAFESTRCOPY(InstrumentID);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///总成交量
	VALUEEQU(TotalVol);		
	///总成交额
	VALUEEQU(TotalAmt);		
	///买成交量
	VALUEEQU(BuyVol);		
	///买成交额
	VALUEEQU(BuyAmt);		
	///卖成交量
	VALUEEQU(SellVol);		
	///卖成交额
	VALUEEQU(SellAmt);		
	///净买入成交量
	VALUEEQU(NetVol);		
	///净买入成交额
	VALUEEQU(NetAmt);		
}	
void ConvertFromCtp::GetNormalRiskQueryField(const CShfeFtdcNormalRiskQueryField& ctp,NormalRiskQueryField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
}	
void ConvertFromCtp::GetNoticePatternField(const CShfeFtdcNoticePatternField& ctp,NoticePatternField& risk)	
{
	///经纪公司代码
	SAFESTRCOPY(BrokerID);
	///业务类型
	SAFESTRCOPY(BizType);
	///通知途径
	VALUEEQU(Method);
	///业务名称
	SAFESTRCOPY(BizName);
	///最近修改模版的用户代码
	SAFESTRCOPY(UserID);
	///是否启用
	VALUEEQU(IsActive);
	///通知模版内容
	SAFESTRCOPY(Pattern);
		
}	
void ConvertFromCtp::GetNoticeTokenField(const CShfeFtdcNoticeTokenField& ctp,NoticeTokenField& risk)	
{	
	///自动替换字段
	SAFESTRCOPY(Token);		
	///自动替换字段的描述
	SAFESTRCOPY(Description);		
}	
void ConvertFromCtp::GetOrderStatField(const CShfeFtdcOrderStatField& ctp,OrderStatField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///交易所品种合约代码组合(交易所代码使用前缀e:，格式如cu,e:SHFE,cu1105)
	SAFESTRCOPY(ExchangeProductInstID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///总报单量
	VALUEEQU(TotalVol);		
	///买报单量
	VALUEEQU(BuyVol);		
	///卖报单量
	VALUEEQU(SellVol);		
	///净买入报单量
	VALUEEQU(NetVol);		
	///有成交报单数
	VALUEEQU(TradeCount);		
	///总报单数
	VALUEEQU(TotalCount);		
}	
void ConvertFromCtp::GetPositionStatField(const CShfeFtdcPositionStatField& ctp,PositionStatField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///交易所品种合约代码组合(交易所代码使用前缀e:，格式如cu,e:SHFE,cu1105)
	SAFESTRCOPY(ExchangeProductInstID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///昨持仓
	VALUEEQU(YdPosition);		
	///总持仓
	VALUEEQU(Position);		
	///多头持仓
	VALUEEQU(LongPosition);		
	///空头持仓
	VALUEEQU(ShortPosition);		
	///净持仓
	VALUEEQU(NetPosition);		
	///投机多头持仓
	VALUEEQU(SpecuLongPosi);		
	///投机空头持仓
	VALUEEQU(SpecuShortPosi);		
	///保值多头持仓
	VALUEEQU(HedgeLongPosi);		
	///保值空头持仓
	VALUEEQU(HedgeShortPosi);		
	///今仓
	VALUEEQU(TodayPosition);		
	///总持仓成本
	VALUEEQU(PositionCost);		
}	
void ConvertFromCtp::GetPredictRiskAccountField(const CShfeFtdcPredictRiskAccountField& ctp,PredictRiskAccountField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///初始权益
	VALUEEQU(Balance0);		
	///D1亏损
	VALUEEQU(Lose1);		
	///D1权益
	VALUEEQU(Balance1);		
	///D2亏损
	VALUEEQU(Lose2);		
	///D2权益
	VALUEEQU(Balance2);		
	///D3亏损
	VALUEEQU(Lose3);		
	///D3权益
	VALUEEQU(Balance3);		
	///D4亏损
	VALUEEQU(Lose4);		
	///D4权益
	VALUEEQU(Balance4);		
}	
void ConvertFromCtp::GetPredictRiskPositionField(const CShfeFtdcPredictRiskPositionField& ctp,PredictRiskPositionField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///多头持仓
	VALUEEQU(LongVol);		
	///空头持仓
	VALUEEQU(ShortVol);		
	///净持仓
	VALUEEQU(NetVol);		
	///初始价格
	VALUEEQU(Price0);		
	///D1结算价
	VALUEEQU(Price1);		
	///D1涨跌幅
	VALUEEQU(Limit1);		
	///D2涨跌幅
	VALUEEQU(Limit2);		
	///D3涨跌幅
	VALUEEQU(Limit3);		
	///D4涨跌幅
	VALUEEQU(Limit4);		
	///合约乘数
	VALUEEQU(Multiple);		
	///D1亏损
	VALUEEQU(Lose1);		
	///D2亏损
	VALUEEQU(Lose2);		
	///D3亏损
	VALUEEQU(Lose3);		
	///D4亏损
	VALUEEQU(Lose4);		
	///可留手数
	VALUEEQU(LeftVol);		
	///D1应强平
	VALUEEQU(ShouldClose);		
	///调整后可强平
	VALUEEQU(CanClose);		
	///当前保证金率
	VALUEEQU(CurrMarginRate);		
	///调整后保证金率
	VALUEEQU(MarginRate1);		
	///净持仓保证金
	VALUEEQU(NetMargin1);		
	///D1可用
	VALUEEQU(Available1);		
	///1手保证金
	VALUEEQU(Margin1PerVol);		
}	
void ConvertFromCtp::GetPriceVaryParamField(const CShfeFtdcPriceVaryParamField& ctp,PriceVaryParamField& risk)	
{	
	///合约编号
	SAFESTRCOPY(InstrumentID);		
	///价格波动方向
	VALUEEQU(Direction);		
	///价格波动幅度(>=0有效)
	VALUEEQU(Pecent);		
	///价格波动的基准价类型
	VALUEEQU(BasePriceType);		
	///自定义基准价
	VALUEEQU(BasePrice);		
}	
void ConvertFromCtp::GetProductField(const CShfeFtdcProductField& ctp,ProductField& risk)	
{	
	///产品代码
	SAFESTRCOPY(ProductID);		
	///产品名称
	SAFESTRCOPY(ProductName);		
	///交易所代码
	SAFESTRCOPY(ExchangeID);		
	///产品类型
	VALUEEQU(ProductClass);		
	///合约数量乘数
	VALUEEQU(VolumeMultiple);		
	///最小变动价位
	VALUEEQU(PriceTick);		
	///市价单最大下单量
	VALUEEQU(MaxMarketOrderVolume);		
	///市价单最小下单量
	VALUEEQU(MinMarketOrderVolume);		
	///限价单最大下单量
	VALUEEQU(MaxLimitOrderVolume);		
	///限价单最小下单量
	VALUEEQU(MinLimitOrderVolume);		
	///持仓类型
	VALUEEQU(PositionType);		
	///持仓日期类型
	VALUEEQU(PositionDateType);		
	///平仓处理类型
	VALUEEQU(CloseDealType);		
}	
void ConvertFromCtp::GetQueryBrokerDepositField(const CShfeFtdcQueryBrokerDepositField& ctp,QueryBrokerDepositField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///交易所代码
	SAFESTRCOPY(ExchangeID);		
}	
void ConvertFromCtp::GetRemoveRiskParkedOrderField(const CShfeFtdcRemoveRiskParkedOrderField& ctp,RemoveRiskParkedOrderField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///预埋报单编号
	SAFESTRCOPY(ParkedOrderID);		
}	
void ConvertFromCtp::GetRiskInvestorParamField(const CShfeFtdcRiskInvestorParamField& ctp,RiskInvestorParamField& risk)	
{	
	///参数代码
	VALUEEQU(ParamID);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///参数值
	SAFESTRCOPY(ParamValue);		
}	
void ConvertFromCtp::GetRiskLoginInfoField(const CShfeFtdcRiskLoginInfoField& ctp,RiskLoginInfoField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///本地前置会话编号
	VALUEEQU(LocalSessionID);		
	///风控前置会话编号
	VALUEEQU(SessionID);		
	///风控前置编号
	VALUEEQU(FrontID);		
}	
void ConvertFromCtp::GetRiskNotifyTokenField(const CShfeFtdcRiskNotifyTokenField& ctp,RiskNotifyTokenField& risk)	
{	
	///自动替换字段
	SAFESTRCOPY(Token);		
	///自动替换字段的描述
	SAFESTRCOPY(Description);		
}	
void ConvertFromCtp::GetRiskParamInfoField(const CShfeFtdcRiskParamInfoField& ctp,RiskParamInfoField& risk)	
{	
	///参数代码
	VALUEEQU(ParamID);		
	///参数说明
	SAFESTRCOPY(Description);		
}	
void ConvertFromCtp::GetRiskParkedOrderField(const CShfeFtdcRiskParkedOrderField& ctp,RiskParkedOrderField& risk)	
{	
	///预埋报单编号
	SAFESTRCOPY(ParkedOrderID);		
	///预埋单本地编号
	SAFESTRCOPY(LocalID);		
	///风控用户类型
	VALUEEQU(UserType);		
	///预埋单状态
	VALUEEQU(Status);		
	///预埋单状态信息
	SAFESTRCOPY(StatusMsg);		
	///触发类型
	VALUEEQU(TriggerType);		
	///交易阶段
	VALUEEQU(TradeSegment);		
	///交易所代码
	SAFESTRCOPY(ExchangeID);		
	///风控强平类型
	VALUEEQU(FCType);		
	///辅助强平单的生成时间
	SAFESTRCOPY(Time1);		
	///辅助强平单的生成时间（毫秒）
	VALUEEQU(Millisec1);		
	///强平单的提交时间
	SAFESTRCOPY(Time2);		
	///强平单的提交时间（毫秒）
	VALUEEQU(Millisec2);		
	///强平场景编号
	SAFESTRCOPY(FCSceneId);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///报单引用
	SAFESTRCOPY(OrderRef);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///报单价格条件
	VALUEEQU(OrderPriceType);		
	///买卖方向
	VALUEEQU(Direction);		
	///组合开平标志
	SAFESTRCOPY(CombOffsetFlag);		
	///组合投机套保标志
	SAFESTRCOPY(CombHedgeFlag);		
	///价格
	VALUEEQU(LimitPrice);		
	///数量
	VALUEEQU(VolumeTotalOriginal);		
	///有效期类型
	VALUEEQU(TimeCondition);		
	///GTD日期
	SAFESTRCOPY(GTDDate);		
	///成交量类型
	VALUEEQU(VolumeCondition);		
	///最小成交量
	VALUEEQU(MinVolume);		
	///触发条件
	VALUEEQU(ContingentCondition);		
	///止损价
	VALUEEQU(StopPrice);		
	///强平原因
	VALUEEQU(ForceCloseReason);		
	///自动挂起标志
	VALUEEQU(IsAutoSuspend);		
	///业务单元
	SAFESTRCOPY(BusinessUnit);		
	///请求编号
	VALUEEQU(RequestID);		
	///用户强评标志
	VALUEEQU(UserForceClose);		
	///报单提交状态
	VALUEEQU(OrderSubmitStatus);		
	///报单状态
	VALUEEQU(OrderStatus);		
	///报单状态信息
	SAFESTRCOPY(OrderStatusMsg);		
	///错误代码
	VALUEEQU(ErrorID);		
	///错误信息
	SAFESTRCOPY(ErrorMsg);		
	///预埋时间
	SAFESTRCOPY(ParkedTime);		
	///预埋量
	VALUEEQU(OriginalParkedVol);		
	///预埋时可平量
	VALUEEQU(MaxCloseVol1);		
	///触发时可平量
	VALUEEQU(MaxCloseVol2);		
	///预埋时追保
	VALUEEQU(Call1);		
	///触发时追保
	VALUEEQU(Call2);		
	///预埋时出入金
	VALUEEQU(MoneyIO1);		
	///触发时出入金
	VALUEEQU(MoneyIO2);		
	///删除原因
	SAFESTRCOPY(DeleteReason);		
	///强平资金释放标准
	VALUEEQU(ForceCloseRelease);		
}	
void ConvertFromCtp::GetRiskPatternField(const CShfeFtdcRiskPatternField& ctp,RiskPatternField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///业务类型
	SAFESTRCOPY(BizType);		
	///模板代码
	VALUEEQU(PatternID);		
	///模板名称
	SAFESTRCOPY(PatternName);		
	///通知模版内容
	SAFESTRCOPY(Pattern);		
}	
void ConvertFromCtp::GetRiskSyncAccountField(const CShfeFtdcRiskSyncAccountField& ctp,RiskSyncAccountField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///出入金金额
	VALUEEQU(Withdraw);		
	///当前保证金总额
	VALUEEQU(CurrMargin);		
	///手续费
	VALUEEQU(Commission);		
	///平仓盈亏
	VALUEEQU(CloseProfit);		
	///持仓盈亏
	VALUEEQU(PositionProfit);		
	///总权益
	VALUEEQU(Balance);		
	///可用资金
	VALUEEQU(Available);		
	///质押金额
	VALUEEQU(Mortgage);		
	///交易所保证金
	VALUEEQU(ExchangeMargin);		
	///可取资金
	VALUEEQU(WithdrawQuota);		
	///信用额度
	VALUEEQU(Credit);		
	///保证金冻结
	VALUEEQU(FrozenMargin);		
	///手续费冻结
	VALUEEQU(FrozenCommission);	
	//接收时间
	time_t lt=time(NULL); 
	strftime(risk.RecvTime,9,"%Y%m%d",localtime(&lt));
}	
void ConvertFromCtp::GetRiskSyncInvestorField(const CShfeFtdcRiskSyncInvestorField& ctp,RiskSyncInvestorField& risk)	
{	
	///操作标志(修改或删除)
	VALUEEQU(Action);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者分组代码
	SAFESTRCOPY(InvestorGroupID);		
	///投资者名称
	SAFESTRCOPY(InvestorName);		
	///证件类型
	VALUEEQU(IdentifiedCardType);		
	///证件号码
	SAFESTRCOPY(IdentifiedCardNo);		
	///是否活跃
	VALUEEQU(IsActive);		
	///联系电话
	SAFESTRCOPY(Telephone);		
	///通讯地址
	SAFESTRCOPY(Address);		
	///开户日期
	SAFESTRCOPY(OpenDate);		
	///手机
	SAFESTRCOPY(Mobile);		
}	
void ConvertFromCtp::GetRiskUserEventField(const CShfeFtdcRiskUserEventField& ctp,RiskUserEventField& risk)	
{	
	///用户事件当天的序号
	VALUEEQU(SequenceNo);		
	///事件发生日期
	SAFESTRCOPY(EventDate);		
	///事件发生时间
	SAFESTRCOPY(EventTime);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///事件类型
	VALUEEQU(EventType);		
	///事件信息
	SAFESTRCOPY(EventInfo);		
}	
void ConvertFromCtp::GetRiskUserFunctionField(const CShfeFtdcRiskUserFunctionField& ctp,RiskUserFunctionField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///权限名称
	SAFESTRCOPY(Function);		
}	
void ConvertFromCtp::GetRspForceClosePositionField(const CShfeFtdcRspForceClosePositionField& ctp,RspForceClosePositionField& risk)	
{	
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///持仓多空方向
	VALUEEQU(PosiDirection);		
	///投机套保标志
	VALUEEQU(HedgeFlag);		
	///持仓日期
	VALUEEQU(PositionDate);		
	///当前持仓数量
	VALUEEQU(Position);		
	///需强平持仓数量
	VALUEEQU(FCPosition);		
	///强平价格类型
	VALUEEQU(FCPriceType);		
	///限价调整点数
	VALUEEQU(PriceTick);		
	///强平价格
	VALUEEQU(FCPrice);		
	///平仓释放的保证金
	VALUEEQU(ReleaseMargin);		
	///平仓盈亏
	VALUEEQU(CloseProfit);		
	///强平场景编号
	SAFESTRCOPY(FCID);		
	///辅助强平单的生成时间
	SAFESTRCOPY(Time);		
	///当前时间（毫秒）
	VALUEEQU(CurrMillisec);		
	///平仓释放的交易所保证金
	VALUEEQU(ExchReleaseMargin);		
}	
void ConvertFromCtp::GetRspInfoField(const CShfeFtdcRspInfoField& ctp,RspInfoField& risk)	
{	
	///错误代码
	VALUEEQU(ErrorID);		
	///错误信息
	SAFESTRCOPY(ErrorMsg);		
}	
void ConvertFromCtp::GetRspInstPositionRateField(const CShfeFtdcRspInstPositionRateField& ctp,RspInstPositionRateField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///散户保值买入持仓量
	VALUEEQU(hbtotal_amt_little);		
	///中户保值买入持仓量
	VALUEEQU(hbtotal_amt_medium);		
	///大户保值买入持仓量
	VALUEEQU(hbtotal_amt_large);		
	///散户保值卖出持仓量
	VALUEEQU(hstotal_amt_little);		
	///中户保值卖出持仓量
	VALUEEQU(hstotal_amt_medium);		
	///大户保值卖出持仓量
	VALUEEQU(hstotal_amt_large);		
	///散户保值持仓量
	VALUEEQU(htotal_amt_little);		
	///中户保值持仓量
	VALUEEQU(htotal_amt_medium);		
	///大户保值持仓量
	VALUEEQU(htotal_amt_large);		
	///散户投机买入持仓量
	VALUEEQU(sbtotal_amt_little);		
	///中户投机买入持仓量
	VALUEEQU(sbtotal_amt_medium);		
	///大户投机买入持仓量
	VALUEEQU(sbtotal_amt_large);		
	///散户投机卖出持仓量
	VALUEEQU(sstotal_amt_little);		
	///中户投机卖出持仓量
	VALUEEQU(sstotal_amt_medium);		
	///大户投机卖出持仓量
	VALUEEQU(sstotal_amt_large);		
	///散户投机持仓量
	VALUEEQU(stotal_amt_little);		
	///中户投机持仓量
	VALUEEQU(stotal_amt_medium);		
	///大户投机持仓量
	VALUEEQU(stotal_amt_large);		
	///散户买入持仓量
	VALUEEQU(buytotal_amt_little);		
	///中户买入持仓量
	VALUEEQU(buytotal_amt_medium);		
	///大户买入持仓量
	VALUEEQU(buytotal_amt_large);		
	///散户卖出持仓量
	VALUEEQU(selltotal_amt_little);		
	///中户卖出持仓量
	VALUEEQU(selltotal_amt_medium);		
	///大户卖出持仓量
	VALUEEQU(selltotal_amt_large);		
	///散户总持仓量
	VALUEEQU(total_amt_little);		
	///中户总持仓量
	VALUEEQU(total_amt_medium);		
	///大户总持仓量
	VALUEEQU(total_amt_large);		
}	
void ConvertFromCtp::GetRspProductPositionRateField(const CShfeFtdcRspProductPositionRateField& ctp,RspProductPositionRateField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///产品代码
	SAFESTRCOPY(ProductID);		
	///散户保值买入持仓量
	VALUEEQU(hbtotal_amt_little);		
	///中户保值买入持仓量
	VALUEEQU(hbtotal_amt_medium);		
	///大户保值买入持仓量
	VALUEEQU(hbtotal_amt_large);		
	///散户保值卖出持仓量
	VALUEEQU(hstotal_amt_little);		
	///中户保值卖出持仓量
	VALUEEQU(hstotal_amt_medium);		
	///大户保值卖出持仓量
	VALUEEQU(hstotal_amt_large);		
	///散户保值持仓量
	VALUEEQU(htotal_amt_little);		
	///中户保值持仓量
	VALUEEQU(htotal_amt_medium);		
	///大户保值持仓量
	VALUEEQU(htotal_amt_large);		
	///散户投机买入持仓量
	VALUEEQU(sbtotal_amt_little);		
	///中户投机买入持仓量
	VALUEEQU(sbtotal_amt_medium);		
	///大户投机买入持仓量
	VALUEEQU(sbtotal_amt_large);		
	///散户投机卖出持仓量
	VALUEEQU(sstotal_amt_little);		
	///中户投机卖出持仓量
	VALUEEQU(sstotal_amt_medium);		
	///大户投机卖出持仓量
	VALUEEQU(sstotal_amt_large);		
	///散户投机持仓量
	VALUEEQU(stotal_amt_little);		
	///中户投机持仓量
	VALUEEQU(stotal_amt_medium);		
	///大户投机持仓量
	VALUEEQU(stotal_amt_large);		
	///散户买入持仓量
	VALUEEQU(buytotal_amt_little);		
	///中户买入持仓量
	VALUEEQU(buytotal_amt_medium);		
	///大户买入持仓量
	VALUEEQU(buytotal_amt_large);		
	///散户卖出持仓量
	VALUEEQU(selltotal_amt_little);		
	///中户卖出持仓量
	VALUEEQU(selltotal_amt_medium);		
	///大户卖出持仓量
	VALUEEQU(selltotal_amt_large);		
	///散户总持仓量
	VALUEEQU(total_amt_little);		
	///中户总持仓量
	VALUEEQU(total_amt_medium);		
	///大户总持仓量
	VALUEEQU(total_amt_large);		
}	
void ConvertFromCtp::GetRspRiskUserLoginField(const CShfeFtdcRspRiskUserLoginField& ctp,RspRiskUserLoginField& risk)	
{	
	///交易日
	SAFESTRCOPY(TradingDay);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///客户端版本,20091230版Version=1,之前版本Version=0
	VALUEEQU(Version);		
	///前置类型
	VALUEEQU(FrontType);		
}	
void ConvertFromCtp::GetRspSafePriceRangeField(const CShfeFtdcRspSafePriceRangeField& ctp,RspSafePriceRangeField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///基准价格
	VALUEEQU(BasePrice);		
	///波动价格
	VALUEEQU(LimitPrice);		
	///总波动幅度
	VALUEEQU(VaryPecent);		
	///停板个数
	VALUEEQU(LimitDayCnt);		
	///总波动点数
	VALUEEQU(VaryTickCnt);		
	///停板点数
	VALUEEQU(LimitTickCnt);		
	///是否有波动限制
	VALUEEQU(HasLimit);		
	///涨跌停
	VALUEEQU(PecentPerLimit);		
	///停板波动
	VALUEEQU(InLimitVaryPct);		
	///停板外波动
	VALUEEQU(OutLimitVaryPct);		
	///总买持
	VALUEEQU(LongVol);		
	///总卖持
	VALUEEQU(ShortVol);		
	///波动方向
	VALUEEQU(Direction);		
	///不利方向
	VALUEEQU(BadDir);		
}	
void ConvertFromCtp::GetSeqBizNoticeField(const CShfeFtdcSeqBizNoticeField& ctp,SeqBizNoticeField& risk)	
{	
	///流中唯一的序列号
	VALUEEQU(UniqSequenceNo);		
	///事件发生日期
	SAFESTRCOPY(TradingDay);		
	///通知事件在当天的序号
	VALUEEQU(SequenceNo);		
	///风险通知途径
	VALUEEQU(Method);		
	///事件发生时间
	SAFESTRCOPY(EventTime);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///业务类型
	SAFESTRCOPY(BizType);		
	///通知状态
	VALUEEQU(Status);		
	///通知内容
	SAFESTRCOPY(Message);		
	///错误信息
	SAFESTRCOPY(ErrorMsg);		
}	
void ConvertFromCtp::GetSeqDepositField(const CShfeFtdcSeqDepositField& ctp,SeqDepositField& risk)	
{	
	///流中唯一的序列号
	VALUEEQU(UniqSequenceNo);		
	///出入金类型
	VALUEEQU(Type);		
	///有效标志-有效或冲正
	VALUEEQU(Flag);		
	///出入金方向
	VALUEEQU(Direction);		
	///交易日
	SAFESTRCOPY(TradingDay);		
	///流水号
	SAFESTRCOPY(SequenceNo);		
	///时间
	SAFESTRCOPY(Time);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///出入金金额
	VALUEEQU(Amount);		
}	
void ConvertFromCtp::GetSeqPreRiskAccountField(const CShfeFtdcSeqPreRiskAccountField& ctp,SeqPreRiskAccountField& risk)	
{	
	///流中唯一的序列号
	VALUEEQU(UniqSequenceNo);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///投资者帐号
	SAFESTRCOPY(AccountID);		
	///上次质押金额
	VALUEEQU(PreMortgage);		
	///上次信用额度
	VALUEEQU(PreCredit);		
	///上次存款额
	VALUEEQU(PreDeposit);		
	///上次总权益
	VALUEEQU(PreBalance);		
	///上次占用的保证金
	VALUEEQU(PreMargin);		
	///基本准备金
	VALUEEQU(Reserve);		
	///上次交易所保证金
	VALUEEQU(PreExchMargin);		
	///历史强平次数
	VALUEEQU(ForceCloseStat);		
	///投资者交割保证金
	VALUEEQU(DeliveryMargin);		
	///交易所交割保证金
	VALUEEQU(ExchangeDeliveryMargin);
	//接收时间
	time_t lt=time(NULL); 
	strftime(risk.RecvTime,9,"%Y%m%d",localtime(&lt));
}	
void ConvertFromCtp::GetSeqRiskNotifyBField(const CShfeFtdcSeqRiskNotifyBField& ctp,SeqRiskNotifyBField& risk)	
{	
	///流中唯一的序列号
	VALUEEQU(UniqSequenceNo);		
	///风险通知事件在当天的序号
	VALUEEQU(SequenceNo);		
	///事件发生日期
	SAFESTRCOPY(EventDate);		
	///事件发生时间
	SAFESTRCOPY(EventTime);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///请求发送该风险通知的用户代码
	SAFESTRCOPY(UserID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///通知类型
	VALUEEQU(NotifyClass);		
	///风险通知途径
	VALUEEQU(NotifyMethod);		
	///风险通知状态
	VALUEEQU(NotifyStatus);		
	///通知内容
	SAFESTRCOPY(Message);		
	///预留字段(人工通知-通知操作员，否则为错误原因)
	SAFESTRCOPY(Reserve);		
}	
void ConvertFromCtp::GetSeqRiskParkedOrderField(const CShfeFtdcSeqRiskParkedOrderField& ctp,SeqRiskParkedOrderField& risk)	
{	
	///流中唯一的序列号
	VALUEEQU(UniqSequenceNo);		
	///预埋报单编号
	SAFESTRCOPY(ParkedOrderID);		
	///预埋单本地编号
	SAFESTRCOPY(LocalID);		
	///风控用户类型
	VALUEEQU(UserType);		
	///预埋单状态
	VALUEEQU(Status);		
	///预埋单状态信息
	SAFESTRCOPY(StatusMsg);		
	///触发类型
	VALUEEQU(TriggerType);		
	///交易阶段
	VALUEEQU(TradeSegment);		
	///交易所代码
	SAFESTRCOPY(ExchangeID);		
	///风控强平类型
	VALUEEQU(FCType);		
	///辅助强平单的生成时间
	SAFESTRCOPY(Time1);		
	///辅助强平单的生成时间（毫秒）
	VALUEEQU(Millisec1);		
	///强平单的提交时间
	SAFESTRCOPY(Time2);		
	///强平单的提交时间（毫秒）
	VALUEEQU(Millisec2);		
	///强平场景编号
	SAFESTRCOPY(FCSceneId);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///报单引用
	SAFESTRCOPY(OrderRef);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///报单价格条件
	VALUEEQU(OrderPriceType);		
	///买卖方向
	VALUEEQU(Direction);		
	///组合开平标志
	SAFESTRCOPY(CombOffsetFlag);		
	///组合投机套保标志
	SAFESTRCOPY(CombHedgeFlag);		
	///价格
	VALUEEQU(LimitPrice);		
	///数量
	VALUEEQU(VolumeTotalOriginal);		
	///有效期类型
	VALUEEQU(TimeCondition);		
	///GTD日期
	SAFESTRCOPY(GTDDate);		
	///成交量类型
	VALUEEQU(VolumeCondition);		
	///最小成交量
	VALUEEQU(MinVolume);		
	///触发条件
	VALUEEQU(ContingentCondition);		
	///止损价
	VALUEEQU(StopPrice);		
	///强平原因
	VALUEEQU(ForceCloseReason);		
	///自动挂起标志
	VALUEEQU(IsAutoSuspend);		
	///业务单元
	SAFESTRCOPY(BusinessUnit);		
	///请求编号
	VALUEEQU(RequestID);		
	///用户强评标志
	VALUEEQU(UserForceClose);		
	///报单提交状态
	VALUEEQU(OrderSubmitStatus);		
	///报单状态
	VALUEEQU(OrderStatus);		
	///报单状态信息
	SAFESTRCOPY(OrderStatusMsg);		
	///错误代码
	VALUEEQU(ErrorID);		
	///错误信息
	SAFESTRCOPY(ErrorMsg);		
	///预埋时间
	SAFESTRCOPY(ParkedTime);		
	///预埋量
	VALUEEQU(OriginalParkedVol);		
	///预埋时可平量
	VALUEEQU(MaxCloseVol1);		
	///触发时可平量
	VALUEEQU(MaxCloseVol2);		
	///预埋时追保
	VALUEEQU(Call1);		
	///触发时追保
	VALUEEQU(Call2);		
	///预埋时出入金
	VALUEEQU(MoneyIO1);		
	///触发时出入金
	VALUEEQU(MoneyIO2);		
	///删除原因
	SAFESTRCOPY(DeleteReason);		
	///强平资金释放标准
	VALUEEQU(ForceCloseRelease);		
}	
void ConvertFromCtp::GetSequencialBrokerUserEventField(const CShfeFtdcSequencialBrokerUserEventField& ctp,SequencialBrokerUserEventField& risk)	
{	
	///流中唯一的序列号
	VALUEEQU(UniqSequenceNo);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///用户事件类型
	VALUEEQU(UserEventType);		
	///用户事件序号
	VALUEEQU(EventSequenceNo);		
	///事件发生日期
	SAFESTRCOPY(EventDate);		
	///事件发生时间
	SAFESTRCOPY(EventTime);		
	///用户事件信息
	SAFESTRCOPY(UserEventInfo);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
}	
void ConvertFromCtp::GetSequencialOrderField(const CShfeFtdcSequencialOrderField& ctp,SequencialOrderField& risk)	
{	
	///流中唯一的序列号
	risk.UniqSequenceNo=atoi(ctp.OrderLocalID);
	//VALUEEQU(UniqSequenceNo);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///报单引用
	SAFESTRCOPY(OrderRef);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///报单价格条件
	VALUEEQU(OrderPriceType);		
	///买卖方向
	VALUEEQU(Direction);		
	///组合开平标志
	SAFESTRCOPY(CombOffsetFlag);		
	///组合投机套保标志
	SAFESTRCOPY(CombHedgeFlag);		
	///价格
	VALUEEQU(LimitPrice);		
	///数量
	VALUEEQU(VolumeTotalOriginal);		
	///有效期类型
	VALUEEQU(TimeCondition);		
	///GTD日期
	SAFESTRCOPY(GTDDate);		
	///成交量类型
	VALUEEQU(VolumeCondition);		
	///最小成交量
	VALUEEQU(MinVolume);		
	///触发条件
	VALUEEQU(ContingentCondition);		
	///止损价
	VALUEEQU(StopPrice);		
	///强平原因
	VALUEEQU(ForceCloseReason);		
	///自动挂起标志
	VALUEEQU(IsAutoSuspend);		
	///业务单元
	SAFESTRCOPY(BusinessUnit);		
	///请求编号
	VALUEEQU(RequestID);		
	///本地报单编号
	SAFESTRCOPY(OrderLocalID);		
	///交易所代码
	SAFESTRCOPY(ExchangeID);		
	///会员代码
	SAFESTRCOPY(ParticipantID);		
	///客户代码
	SAFESTRCOPY(ClientID);		
	///合约在交易所的代码
	SAFESTRCOPY(ExchangeInstID);		
	///交易所交易员代码
	SAFESTRCOPY(TraderID);		
	///安装编号
	VALUEEQU(InstallID);		
	///报单提交状态
	VALUEEQU(OrderSubmitStatus);		
	///报单提示序号
	VALUEEQU(NotifySequence);		
	///交易日
	SAFESTRCOPY(TradingDay);		
	///结算编号
	VALUEEQU(SettlementID);		
	///报单编号
	SAFESTRCOPY(OrderSysID);		
	///报单来源
	VALUEEQU(OrderSource);		
	///报单状态
	VALUEEQU(OrderStatus);		
	///报单类型
	VALUEEQU(OrderType);		
	///今成交数量
	VALUEEQU(VolumeTraded);		
	///剩余数量
	VALUEEQU(VolumeTotal);		
	///报单日期
	SAFESTRCOPY(InsertDate);		
	///委托时间
	SAFESTRCOPY(InsertTime);		
	///激活时间
	SAFESTRCOPY(ActiveTime);		
	///挂起时间
	SAFESTRCOPY(SuspendTime);		
	///最后修改时间
	SAFESTRCOPY(UpdateTime);		
	///撤销时间
	SAFESTRCOPY(CancelTime);		
	///最后修改交易所交易员代码
	SAFESTRCOPY(ActiveTraderID);		
	///结算会员编号
	SAFESTRCOPY(ClearingPartID);		
	///序号
	VALUEEQU(SequenceNo);		
	///前置编号
	VALUEEQU(FrontID);		
	///会话编号
	VALUEEQU(SessionID);		
	///用户端产品信息
	SAFESTRCOPY(UserProductInfo);		
	///状态信息
	SAFESTRCOPY(StatusMsg);		
	///用户强评标志
	VALUEEQU(UserForceClose);		
	///操作用户代码
	SAFESTRCOPY(ActiveUserID);		
	///经纪公司报单编号
	VALUEEQU(BrokerOrderSeq);		
	///相关报单
	SAFESTRCOPY(RelativeOrderSysID);		
	///郑商所成交数量
	VALUEEQU(ZCETotalTradedVolume);		
}	
void ConvertFromCtp::GetSequencialPositionField(const CShfeFtdcSequencialPositionField& ctp,SequencialPositionField& risk)	
{
	///流中唯一的序列号
	std::string strHashSrc="P";
	strHashSrc+=ctp.InvestorID;
	strHashSrc+=ctp.InstrumentID;
	strHashSrc+=ctp.PosiDirection;
	strHashSrc+=ctp.HedgeFlag;
	risk.UniqSequenceNo=g_StringPair?g_StringPair->Get(strHashSrc):0;
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///持仓多空方向
	VALUEEQU(PosiDirection);		
	///投机套保标志
	VALUEEQU(HedgeFlag);		
	///持仓日期
	VALUEEQU(PositionDate);		
	///上日持仓
	VALUEEQU(YdPosition);		
	///今日持仓
	VALUEEQU(Position);		
	///多头冻结
	VALUEEQU(LongFrozen);		
	///空头冻结
	VALUEEQU(ShortFrozen);		
	///开仓冻结金额
	VALUEEQU(LongFrozenAmount);		
	///开仓冻结金额
	VALUEEQU(ShortFrozenAmount);		
	///开仓量
	VALUEEQU(OpenVolume);		
	///平仓量
	VALUEEQU(CloseVolume);		
	///开仓金额
	VALUEEQU(OpenAmount);		
	///平仓金额
	VALUEEQU(CloseAmount);		
	///持仓成本
	VALUEEQU(PositionCost);		
	///上次占用的保证金
	VALUEEQU(PreMargin);		
	///占用的保证金
	VALUEEQU(UseMargin);		
	///冻结的保证金
	VALUEEQU(FrozenMargin);		
	///冻结的资金
	VALUEEQU(FrozenCash);		
	///冻结的手续费
	VALUEEQU(FrozenCommission);		
	///资金差额
	VALUEEQU(CashIn);		
	///手续费
	VALUEEQU(Commission);		
	///平仓盈亏
	VALUEEQU(CloseProfit);		
	///持仓盈亏
	VALUEEQU(PositionProfit);		
	///上次结算价
	VALUEEQU(PreSettlementPrice);		
	///本次结算价
	VALUEEQU(SettlementPrice);		
	///交易日
	SAFESTRCOPY(TradingDay);		
	///结算编号
	VALUEEQU(SettlementID);		
	///开仓成本
	VALUEEQU(OpenCost);		
	///交易所保证金
	VALUEEQU(ExchangeMargin);		
	///组合成交形成的持仓
	VALUEEQU(CombPosition);		
	///组合多头冻结
	VALUEEQU(CombLongFrozen);		
	///组合空头冻结
	VALUEEQU(CombShortFrozen);		
	///逐日盯市平仓盈亏
	VALUEEQU(CloseProfitByDate);		
	///逐笔对冲平仓盈亏
	VALUEEQU(CloseProfitByTrade);		
	///今日持仓
	VALUEEQU(TodayPosition);		
	///保证金率
	VALUEEQU(MarginRateByMoney);		
	///保证金率(按手数)
	VALUEEQU(MarginRateByVolume);		
}	
void ConvertFromCtp::GetSequencialTradeField(const CShfeFtdcSequencialTradeField& ctp,SequencialTradeField& risk)	
{	
	///流中唯一的序列号
	VALUEEQU(UniqSequenceNo);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///报单引用
	SAFESTRCOPY(OrderRef);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///交易所代码
	SAFESTRCOPY(ExchangeID);		
	///成交编号
	SAFESTRCOPY(TradeID);		
	///买卖方向
	VALUEEQU(Direction);		
	///报单编号
	SAFESTRCOPY(OrderSysID);		
	///会员代码
	SAFESTRCOPY(ParticipantID);		
	///客户代码
	SAFESTRCOPY(ClientID);		
	///交易角色
	VALUEEQU(TradingRole);		
	///合约在交易所的代码
	SAFESTRCOPY(ExchangeInstID);		
	///开平标志
	VALUEEQU(OffsetFlag);		
	///投机套保标志
	VALUEEQU(HedgeFlag);		
	///价格
	VALUEEQU(Price);		
	///数量
	VALUEEQU(Volume);		
	///成交时期
	SAFESTRCOPY(TradeDate);		
	///成交时间
	SAFESTRCOPY(TradeTime);		
	///成交类型
	VALUEEQU(TradeType);		
	///成交价来源
	VALUEEQU(PriceSource);		
	///交易所交易员代码
	SAFESTRCOPY(TraderID);		
	///本地报单编号
	SAFESTRCOPY(OrderLocalID);		
	///结算会员编号
	SAFESTRCOPY(ClearingPartID);		
	///业务单元
	SAFESTRCOPY(BusinessUnit);		
	///序号
	VALUEEQU(SequenceNo);		
	///交易日
	SAFESTRCOPY(TradingDay);		
	///结算编号
	VALUEEQU(SettlementID);		
	///经纪公司报单编号
	VALUEEQU(BrokerOrderSeq);		
	///成交来源
	VALUEEQU(TradeSource);		
}	
void ConvertFromCtp::GetSettlementSessionField(const CShfeFtdcSettlementSessionField& ctp,SettlementSessionField& risk)	
{	
	///交易日
	SAFESTRCOPY(TradingDay);		
	///结算编号
	VALUEEQU(SettlementID);		
}	
void ConvertFromCtp::GetTradeParamField(const CShfeFtdcTradeParamField& ctp,TradeParamField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///参数代码
	VALUEEQU(TradeParamID);		
	///参数代码值
	SAFESTRCOPY(TradeParamValue);		
	///备注
	SAFESTRCOPY(Memo);		
}	
void ConvertFromCtp::GetTradeStatField(const CShfeFtdcTradeStatField& ctp,TradeStatField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///交易所品种合约代码组合(交易所代码使用前缀e:，格式如cu,e:SHFE,cu1105)
	SAFESTRCOPY(ExchangeProductInstID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///总成交量
	VALUEEQU(TotalVol);		
	///总成交额
	VALUEEQU(TotalAmt);		
	///买成交量
	VALUEEQU(BuyVol);		
	///买成交额
	VALUEEQU(BuyAmt);		
	///卖成交量
	VALUEEQU(SellVol);		
	///卖成交额
	VALUEEQU(SellAmt);		
	///净买入成交量
	VALUEEQU(NetVol);		
	///净买入成交额
	VALUEEQU(NetAmt);		
}	
void ConvertFromCtp::GetTradingCodeField(const CShfeFtdcTradingCodeField& ctp,TradingCodeField& risk)	
{	
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///交易所代码
	SAFESTRCOPY(ExchangeID);		
	///客户代码
	SAFESTRCOPY(ClientID);		
	///是否活跃
	VALUEEQU(IsActive);		
	///交易编码类型
	VALUEEQU(ClientIDType);		
}	
void ConvertFromCtp::GetUserPasswordUpdateField(const CShfeFtdcUserPasswordUpdateField& ctp,UserPasswordUpdateField& risk)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///原来的口令
	SAFESTRCOPY(OldPassword);		
	///新的口令
	SAFESTRCOPY(NewPassword);		
}	
void ConvertFromCtp::GetVaryMarketDataField(const CShfeFtdcVaryMarketDataField& ctp,VaryMarketDataField& risk)	
{	
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///最新价
	VALUEEQU(LastPrice);		
}	
