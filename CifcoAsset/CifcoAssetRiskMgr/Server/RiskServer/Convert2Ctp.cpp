#include "StdAfx.h"
#include "Convert2Ctp.h"
#ifdef SAFESTRCOPY
#undef SAFESTRCOPY
#endif
#define SAFESTRCOPY(tag)	safestrcpy(ctp.tag,sizeof(risk.tag),risk.tag)
#ifdef VALUEEQU
#undef VALUEEQU
#endif
#define VALUEEQU(tag)		ctp.tag=risk.tag
Convert2Ctp::Convert2Ctp(void)
{
}

Convert2Ctp::~Convert2Ctp(void)
{
}
void Convert2Ctp::GetBizNoticeField(const BizNoticeField& risk,CShfeFtdcBizNoticeField& ctp)	
{	
	///事件发生日期
	SAFESTRCOPY(TradingDay);		
	///通知事件在当天的序号
	VALUEEQU(SequenceNo);		
	///风险通知途径
	VALUEEQU(Method);		
	///事件发生时间
	SAFESTRCOPY(EventTime);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///业务类型
	SAFESTRCOPY(BizType);		
	///通知状态
	VALUEEQU(Status);		
	///通知内容
	SAFESTRCOPY(Message);		
	///错误信息
	SAFESTRCOPY(ErrorMsg);		
}	
void Convert2Ctp::GetBrokerInvestorField(const BrokerInvestorField& risk,CShfeFtdcBrokerInvestorField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
}	
void Convert2Ctp::GetForceCloseListField(const ForceCloseListField& risk,CShfeFtdcForceCloseListField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
}	
void Convert2Ctp::GetForceClosePositionField(const ForceClosePositionField& risk,CShfeFtdcForceClosePositionField& ctp)	
{	
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///持仓多空方向
	VALUEEQU(PosiDirection);		
	///投机套保标志
	VALUEEQU(HedgeFlag);		
	///持仓日期
	VALUEEQU(PositionDate);		
	///当前持仓数量
	VALUEEQU(Position);		
	///需强平持仓数量
	VALUEEQU(FCPosition);		
	///强平价格类型
	VALUEEQU(FCPriceType);		
	///限价调整点数
	VALUEEQU(PriceTick);		
	///强平价格
	VALUEEQU(FCPrice);		
	///平仓释放的保证金
	VALUEEQU(ReleaseMargin);		
	///平仓盈亏
	VALUEEQU(CloseProfit);		
	///平仓释放的交易所保证金
	VALUEEQU(ExchReleaseMargin);		
}	
void Convert2Ctp::GetForceClosePositionRuleField(const ForceClosePositionRuleField& risk,CShfeFtdcForceClosePositionRuleField& ctp)	
{	
	///产品或合约代码
	SAFESTRCOPY(ProductInstrumentID);		
	///强平持仓方向
	VALUEEQU(FCPosiDirection);		
	///强平投机套保标志
	VALUEEQU(FCHedgeFlag);		
	///强平组合持仓标志
	VALUEEQU(FCCombPosiFlag);		
	///强平历史持仓顺序
	VALUEEQU(FCHistoryPosiOrder);		
	///强平价格类型
	VALUEEQU(FCPrice);		
	///限价调整点数
	VALUEEQU(PriceTick);		
	///批量强平计算规则优先级
	SAFESTRCOPY(FCRulePriority);		
}	
void Convert2Ctp::GetForceCloseStandardField(const ForceCloseStandardField& risk,CShfeFtdcForceCloseStandardField& ctp)	
{	
	///强平标准
	VALUEEQU(ForceCloseLevel);		
	///强平资金释放标准
	VALUEEQU(ForceCloseRelease);		
	///非停板方向持仓优先
	VALUEEQU(FCNonLimitFirst);		
}	
void Convert2Ctp::GetIndexNPPField(const IndexNPPField& risk,CShfeFtdcIndexNPPField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///产品代码
	SAFESTRCOPY(ProductIDs);		
	///报警值(在参数中是警示值,在指标FullIndexNPP中是指标值)
	VALUEEQU(WarnLevel);		
}	
void Convert2Ctp::GetInputOrderActionField(const InputOrderActionField& risk,CShfeFtdcInputOrderActionField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///报单操作引用
	VALUEEQU(OrderActionRef);		
	///报单引用
	SAFESTRCOPY(OrderRef);		
	///请求编号
	VALUEEQU(RequestID);		
	///前置编号
	VALUEEQU(FrontID);		
	///会话编号
	VALUEEQU(SessionID);		
	///交易所代码
	SAFESTRCOPY(ExchangeID);		
	///报单编号
	SAFESTRCOPY(OrderSysID);		
	///操作标志
	VALUEEQU(ActionFlag);		
	///价格
	VALUEEQU(LimitPrice);		
	///数量变化
	VALUEEQU(VolumeChange);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
}	
void Convert2Ctp::GetInstrumentPriceField(const InstrumentPriceField& risk,CShfeFtdcInstrumentPriceField& ctp)	
{	
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///价格类型
	VALUEEQU(PriceType);		
	///价格
	VALUEEQU(Price);		
}	
void Convert2Ctp::GetInvestorIDRangeField(const InvestorIDRangeField& risk,CShfeFtdcInvestorIDRangeField& ctp)	
{	
	///投资者代码(为空代表所有投资者代码)
	SAFESTRCOPY(InvestorIDBeg);		
	///投资者代码(为空代表所有投资者代码)
	SAFESTRCOPY(InvestorIDEnd);		
}	
void Convert2Ctp::GetInvestorPatternField(const InvestorPatternField& risk,CShfeFtdcInvestorPatternField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///业务类型
	SAFESTRCOPY(BizType);		
	///通知途径
	VALUEEQU(Method);		
	///模板代码
	VALUEEQU(PatternID);		
	///是否启用
	VALUEEQU(IsActive);		
}	
void Convert2Ctp::GetNormalRiskQueryField(const NormalRiskQueryField& risk,CShfeFtdcNormalRiskQueryField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
}	
void Convert2Ctp::GetNoticePatternField(const NoticePatternField& risk,CShfeFtdcNoticePatternField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///业务类型
	SAFESTRCOPY(BizType);		
	///通知途径
	VALUEEQU(Method);		
	///业务名称
	SAFESTRCOPY(BizName);		
	///最近修改模版的用户代码
	SAFESTRCOPY(UserID);		
	///是否启用
	VALUEEQU(IsActive);		
	///通知模版内容
	SAFESTRCOPY(Pattern);		
}	
void Convert2Ctp::GetNotifySequenceField(const NotifySequenceField& risk,CShfeFtdcNotifySequenceField& ctp)	
{	
	///序号
	VALUEEQU(SequenceNo);		
}	
void Convert2Ctp::GetPredictRiskParamField(const PredictRiskParamField& risk,CShfeFtdcPredictRiskParamField& ctp)	
{	
	///D1日期
	VALUEEQU(D1);		
	///是否过滤无效记录
	VALUEEQU(IsFilter);		
}	
void Convert2Ctp::GetPriceRangeField(const PriceRangeField& risk,CShfeFtdcPriceRangeField& ctp)	
{	
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///价格1
	VALUEEQU(Price1);		
	///价格2
	VALUEEQU(Price2);		
}	
void Convert2Ctp::GetPriceVaryParamField(const PriceVaryParamField& risk,CShfeFtdcPriceVaryParamField& ctp)	
{	
	///合约编号
	SAFESTRCOPY(InstrumentID);		
	///价格波动方向
	VALUEEQU(Direction);		
	///价格波动幅度(>=0有效)
	VALUEEQU(Pecent);		
	///价格波动的基准价类型
	VALUEEQU(BasePriceType);		
	///自定义基准价
	VALUEEQU(BasePrice);		
}	
void Convert2Ctp::GetProductLimitsField(const ProductLimitsField& risk,CShfeFtdcProductLimitsField& ctp)	
{	
	///品种或合约代码
	SAFESTRCOPY(ProductID);		
	///D1涨跌幅
	VALUEEQU(Limit1);		
	///D2涨跌幅
	VALUEEQU(Limit2);		
	///D3涨跌幅
	VALUEEQU(Limit3);		
	///D4涨跌幅
	VALUEEQU(Limit4);		
	///最大保证金率
	VALUEEQU(MaxMarginRate1);		
	///结算价
	VALUEEQU(Price);		
}	
void Convert2Ctp::GetQryInstPositionRateField(const QryInstPositionRateField& risk,CShfeFtdcQryInstPositionRateField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///起始合约代码
	SAFESTRCOPY(InstIDStart);		
	///结束合约代码
	SAFESTRCOPY(InstIDEnd);		
	///散户保值买入持仓量定义
	VALUEEQU(hbtotal_little);		
	///中户保值买入持仓量定义
	VALUEEQU(hbtotal_medium);		
	///散户保值卖出持仓量定义
	VALUEEQU(hstotal_little);		
	///中户保值卖出持仓量定义
	VALUEEQU(hstotal_medium);		
	///散户保值持仓量定义
	VALUEEQU(htotal_little);		
	///中户保值持仓量定义
	VALUEEQU(htotal_medium);		
	///散户投机买入持仓量定义
	VALUEEQU(sbtotal_little);		
	///中户投机买入持仓量定义
	VALUEEQU(sbtotal_medium);		
	///散户投机卖出持仓量定义
	VALUEEQU(sstotal_little);		
	///中户投机卖出持仓量定义
	VALUEEQU(sstotal_medium);		
	///散户投机持仓量定义
	VALUEEQU(stotal_little);		
	///中户投机持仓量定义
	VALUEEQU(stotal_medium);		
	///散户买入持仓量定义
	VALUEEQU(buytotal_little);		
	///中户买入持仓量定义
	VALUEEQU(buytotal_medium);		
	///散户卖出持仓量定义
	VALUEEQU(selltotal_little);		
	///中户卖出持仓量定义
	VALUEEQU(selltotal_medium);		
	///散户总持仓量定义
	VALUEEQU(total_little);		
	///中户总持仓量定义
	VALUEEQU(total_medium);		
	///取值方式
	VALUEEQU(ValueMode);		
}	
void Convert2Ctp::GetQryInvestorMarginRateField(const QryInvestorMarginRateField& risk,CShfeFtdcQryInvestorMarginRateField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///投机套保标志
	VALUEEQU(HedgeFlag);		
}	
void Convert2Ctp::GetQryPriceVaryEffectField(const QryPriceVaryEffectField& risk,CShfeFtdcQryPriceVaryEffectField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///风险类型
	VALUEEQU(RiskLevel);		
}	
void Convert2Ctp::GetQryProductPositionRateField(const QryProductPositionRateField& risk,CShfeFtdcQryProductPositionRateField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///产品代码
	SAFESTRCOPY(ProductID);		
	///散户保值买入持仓量定义
	VALUEEQU(hbtotal_little);		
	///中户保值买入持仓量定义
	VALUEEQU(hbtotal_medium);		
	///散户保值卖出持仓量定义
	VALUEEQU(hstotal_little);		
	///中户保值卖出持仓量定义
	VALUEEQU(hstotal_medium);		
	///散户保值持仓量定义
	VALUEEQU(htotal_little);		
	///中户保值持仓量定义
	VALUEEQU(htotal_medium);		
	///散户投机买入持仓量定义
	VALUEEQU(sbtotal_little);		
	///中户投机买入持仓量定义
	VALUEEQU(sbtotal_medium);		
	///散户投机卖出持仓量定义
	VALUEEQU(sstotal_little);		
	///中户投机卖出持仓量定义
	VALUEEQU(sstotal_medium);		
	///散户投机持仓量定义
	VALUEEQU(stotal_little);		
	///中户投机持仓量定义
	VALUEEQU(stotal_medium);		
	///散户买入持仓量定义
	VALUEEQU(buytotal_little);		
	///中户买入持仓量定义
	VALUEEQU(buytotal_medium);		
	///散户卖出持仓量定义
	VALUEEQU(selltotal_little);		
	///中户卖出持仓量定义
	VALUEEQU(selltotal_medium);		
	///散户总持仓量定义
	VALUEEQU(total_little);		
	///中户总持仓量定义
	VALUEEQU(total_medium);		
	///取值方式
	VALUEEQU(ValueMode);		
}	
void Convert2Ctp::GetQrySafePriceRangeField(const QrySafePriceRangeField& risk,CShfeFtdcQrySafePriceRangeField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///合约价格波动方法
	VALUEEQU(PriceVaryAlgo);		
	///价格波动的基准价类型(v5.1.2之后废弃)
	VALUEEQU(BasePriceType);		
	///风险类型
	VALUEEQU(RiskLevel);		
	///按合约顺序波动时的最大允许停板个数
	VALUEEQU(MaxLimitDay);		
}	
void Convert2Ctp::GetQryStatField(const QryStatField& risk,CShfeFtdcQryStatField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///交易所品种合约代码组合(交易所代码使用前缀e:，格式如cu,e:SHFE,cu1105)
	SAFESTRCOPY(ExchangeProductInstID);		
	///排名类型
	VALUEEQU(SortType);		
	///按排名数返回结果
	VALUEEQU(ResultCount);		
	///按比例返回结果
	VALUEEQU(ResultRatio);		
}	
void Convert2Ctp::GetQueryBrokerDepositField(const QueryBrokerDepositField& risk,CShfeFtdcQueryBrokerDepositField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///交易所代码
	SAFESTRCOPY(ExchangeID);		
}	
void Convert2Ctp::GetRemoveRiskParkedOrderField(const RemoveRiskParkedOrderField& risk,CShfeFtdcRemoveRiskParkedOrderField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///预埋报单编号
	SAFESTRCOPY(ParkedOrderID);		
}	
void Convert2Ctp::GetReqRiskUserLoginField(const ReqRiskUserLoginField& risk,CShfeFtdcReqRiskUserLoginField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///密码
	SAFESTRCOPY(Password);		
	///客户端版本,20091230版Version=1,之前版本Version=0
	VALUEEQU(Version);		
	///本地前置中客户端连接的SessionID
	VALUEEQU(LocalSessionID);		
}	
void Convert2Ctp::GetRiskForceCloseOrderField(const RiskForceCloseOrderField& risk,CShfeFtdcRiskForceCloseOrderField& ctp)	
{	
	///风控强平类型
	VALUEEQU(FCType);		
	///辅助强平单的生成时间
	SAFESTRCOPY(Time1);		
	///辅助强平单的生成时间（毫秒）
	VALUEEQU(Millisec1);		
	///强平单的提交时间
	SAFESTRCOPY(Time2);		
	///强平单的提交时间（毫秒）
	VALUEEQU(Millisec2);		
	///强平场景编号
	SAFESTRCOPY(FCSceneId);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///报单引用
	SAFESTRCOPY(OrderRef);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///报单价格条件
	VALUEEQU(OrderPriceType);		
	///买卖方向
	VALUEEQU(Direction);		
	///组合开平标志
	SAFESTRCOPY(CombOffsetFlag);		
	///组合投机套保标志
	SAFESTRCOPY(CombHedgeFlag);		
	///价格
	VALUEEQU(LimitPrice);		
	///数量
	VALUEEQU(VolumeTotalOriginal);		
	///有效期类型
	VALUEEQU(TimeCondition);		
	///GTD日期
	SAFESTRCOPY(GTDDate);		
	///成交量类型
	VALUEEQU(VolumeCondition);		
	///最小成交量
	VALUEEQU(MinVolume);		
	///触发条件
	VALUEEQU(ContingentCondition);		
	///止损价
	VALUEEQU(StopPrice);		
	///强平原因
	VALUEEQU(ForceCloseReason);		
	///自动挂起标志
	VALUEEQU(IsAutoSuspend);		
	///业务单元
	SAFESTRCOPY(BusinessUnit);		
	///请求编号
	VALUEEQU(RequestID);		
	///用户强评标志
	VALUEEQU(UserForceClose);		
	///前置编号
	VALUEEQU(FrontID);		
	///会话编号
	VALUEEQU(SessionID);		
}	
void Convert2Ctp::GetRiskInvestorParamField(RiskInvestorParamField& risk,CShfeFtdcRiskInvestorParamField& ctp)	
{	
	///参数代码
	VALUEEQU(ParamID);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///参数值
	SAFESTRCOPY(ParamValue);		
}	
void Convert2Ctp::GetRiskLoginInfoField(RiskLoginInfoField& risk,CShfeFtdcRiskLoginInfoField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///本地前置会话编号
	VALUEEQU(LocalSessionID);		
	///风控前置会话编号
	VALUEEQU(SessionID);		
	///风控前置编号
	VALUEEQU(FrontID);		
}	
void Convert2Ctp::GetRiskPatternField(RiskPatternField& risk,CShfeFtdcRiskPatternField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///业务类型
	SAFESTRCOPY(BizType);		
	///模板代码
	VALUEEQU(PatternID);		
	///模板名称
	SAFESTRCOPY(PatternName);		
	///通知模版内容
	SAFESTRCOPY(Pattern);		
}	
void Convert2Ctp::GetSTPriceField(STPriceField& risk,CShfeFtdcSTPriceField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者范围
	VALUEEQU(InvestorRange);		
	///投资者代码或模板代码
	SAFESTRCOPY(InvestorID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///价格类型
	VALUEEQU(PriceType);		
	///价格
	VALUEEQU(Price);		
}	
void Convert2Ctp::GetRiskNotifyAField(const RiskNotifyAField& risk,CShfeFtdcRiskNotifyAField& ctp)	
{	
	///风险通知事件在当天的序号
	VALUEEQU(SequenceNo);		
	///事件发生日期
	SAFESTRCOPY(EventDate);		
	///事件发生时间
	SAFESTRCOPY(EventTime);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///请求发送该风险通知的用户代码
	SAFESTRCOPY(UserID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///通知类型
	VALUEEQU(NotifyClass);		
	///风险通知途径
	VALUEEQU(NotifyMethod);		
	///风险通知状态
	VALUEEQU(NotifyStatus);		
	///通知内容
	SAFESTRCOPY(Message);		
	///预留字段(人工通知-通知操作员，否则为错误原因)
	SAFESTRCOPY(Reserve);		
}	
void Convert2Ctp::GetRiskNotifyCommandField(const RiskNotifyCommandField& risk,CShfeFtdcRiskNotifyCommandField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///通知类型
	VALUEEQU(NotifyClass);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///是否发送系统通知
	VALUEEQU(IsAutoSystem);		
	///是否发送短信通知
	VALUEEQU(IsAutoSMS);		
	///是否发送邮件通知
	VALUEEQU(IsAutoEmail);		
	///保留字段
	SAFESTRCOPY(Reserve);		
	///通知模版内容
	SAFESTRCOPY(Pattern);		
	///是否允许发送正常通知
	VALUEEQU(IsNormal);		
	///是否允许发送警示通知
	VALUEEQU(IsWarn);		
}	
void Convert2Ctp::GetRiskNtfSequenceField(const RiskNtfSequenceField& risk,CShfeFtdcRiskNtfSequenceField& ctp)	
{	
	///序号
	VALUEEQU(SequenceNo);		
	///业务数据类型
	SAFESTRCOPY(DataType);		
}	
void Convert2Ctp::GetRiskParkedOrderField(const RiskParkedOrderField& risk,CShfeFtdcRiskParkedOrderField& ctp)	
{	
	///预埋报单编号
	SAFESTRCOPY(ParkedOrderID);		
	///预埋单本地编号
	SAFESTRCOPY(LocalID);		
	///风控用户类型
	VALUEEQU(UserType);		
	///预埋单状态
	VALUEEQU(Status);		
	///预埋单状态信息
	SAFESTRCOPY(StatusMsg);		
	///触发类型
	VALUEEQU(TriggerType);		
	///交易阶段
	VALUEEQU(TradeSegment);		
	///交易所代码
	SAFESTRCOPY(ExchangeID);		
	///风控强平类型
	VALUEEQU(FCType);		
	///辅助强平单的生成时间
	SAFESTRCOPY(Time1);		
	///辅助强平单的生成时间（毫秒）
	VALUEEQU(Millisec1);		
	///强平单的提交时间
	SAFESTRCOPY(Time2);		
	///强平单的提交时间（毫秒）
	VALUEEQU(Millisec2);		
	///强平场景编号
	SAFESTRCOPY(FCSceneId);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///报单引用
	SAFESTRCOPY(OrderRef);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///报单价格条件
	VALUEEQU(OrderPriceType);		
	///买卖方向
	VALUEEQU(Direction);		
	///组合开平标志
	SAFESTRCOPY(CombOffsetFlag);		
	///组合投机套保标志
	SAFESTRCOPY(CombHedgeFlag);		
	///价格
	VALUEEQU(LimitPrice);		
	///数量
	VALUEEQU(VolumeTotalOriginal);		
	///有效期类型
	VALUEEQU(TimeCondition);		
	///GTD日期
	SAFESTRCOPY(GTDDate);		
	///成交量类型
	VALUEEQU(VolumeCondition);		
	///最小成交量
	VALUEEQU(MinVolume);		
	///触发条件
	VALUEEQU(ContingentCondition);		
	///止损价
	VALUEEQU(StopPrice);		
	///强平原因
	VALUEEQU(ForceCloseReason);		
	///自动挂起标志
	VALUEEQU(IsAutoSuspend);		
	///业务单元
	SAFESTRCOPY(BusinessUnit);		
	///请求编号
	VALUEEQU(RequestID);		
	///用户强评标志
	VALUEEQU(UserForceClose);		
	///报单提交状态
	VALUEEQU(OrderSubmitStatus);		
	///报单状态
	VALUEEQU(OrderStatus);		
	///报单状态信息
	SAFESTRCOPY(OrderStatusMsg);		
	///错误代码
	VALUEEQU(ErrorID);		
	///错误信息
	SAFESTRCOPY(ErrorMsg);		
	///预埋时间
	SAFESTRCOPY(ParkedTime);		
	///预埋量
	VALUEEQU(OriginalParkedVol);		
	///预埋时可平量
	VALUEEQU(MaxCloseVol1);		
	///触发时可平量
	VALUEEQU(MaxCloseVol2);		
	///预埋时追保
	VALUEEQU(Call1);		
	///触发时追保
	VALUEEQU(Call2);		
	///预埋时出入金
	VALUEEQU(MoneyIO1);		
	///触发时出入金
	VALUEEQU(MoneyIO2);		
	///删除原因
	SAFESTRCOPY(DeleteReason);		
	///强平资金释放标准
	VALUEEQU(ForceCloseRelease);		
}	
void Convert2Ctp::GetRiskUserEventField(const RiskUserEventField& risk,CShfeFtdcRiskUserEventField& ctp)	
{	
	///用户事件当天的序号
	VALUEEQU(SequenceNo);		
	///事件发生日期
	SAFESTRCOPY(EventDate);		
	///事件发生时间
	SAFESTRCOPY(EventTime);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///事件类型
	VALUEEQU(EventType);		
	///事件信息
	SAFESTRCOPY(EventInfo);		
}	
void  Convert2Ctp::GetSTMarginRateField(const STMarginRateField& risk,CShfeFtdcSTMarginRateField& ctp)	
{	
	///合约代码
	SAFESTRCOPY(InstrumentID);		
	///投资者范围
	VALUEEQU(InvestorRange);		
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///投资者代码
	SAFESTRCOPY(InvestorID);		
	///投机套保标志
	VALUEEQU(HedgeFlag);		
	///多头保证金率
	VALUEEQU(LongMarginRatioByMoney);		
	///多头保证金费
	VALUEEQU(LongMarginRatioByVolume);		
	///空头保证金率
	VALUEEQU(ShortMarginRatioByMoney);		
	///空头保证金费
	VALUEEQU(ShortMarginRatioByVolume);		
}	
void Convert2Ctp::GetSubMarketDataField(const SubMarketDataField& risk,CShfeFtdcSubMarketDataField& ctp)	
{	
	///合约编号
	SAFESTRCOPY(InstrumentID);		
}	
void Convert2Ctp::GetUserPasswordUpdateField(const UserPasswordUpdateField& risk,CShfeFtdcUserPasswordUpdateField& ctp)	
{	
	///经纪公司代码
	SAFESTRCOPY(BrokerID);		
	///用户代码
	SAFESTRCOPY(UserID);		
	///原来的口令
	SAFESTRCOPY(OldPassword);		
	///新的口令
	SAFESTRCOPY(NewPassword);		
}	