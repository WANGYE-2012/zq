#include "StdAfx.h"
#include "DumpFromCtp.h"
#ifdef DUMP
#undef DUMP
#endif
#define DUMP(tag)	strDump<<#tag<<"="<<ctp.tag<<","

DumpFromCtp::DumpFromCtp(void)
{
}

DumpFromCtp::~DumpFromCtp(void)
{
}
void DumpFromCtp::DumpBrokerDepositField(std::string& buf,const CShfeFtdcBrokerDepositField& ctp)
{
	std::stringstream strDump;	
	///交易日期
	DUMP(TradingDay);		
	///经纪公司代码
	DUMP(BrokerID);		
	///会员代码
	DUMP(ParticipantID);		
	///交易所代码
	DUMP(ExchangeID);		
	///上次结算准备金
	DUMP(PreBalance);		
	///当前保证金总额
	DUMP(CurrMargin);		
	///平仓盈亏
	DUMP(CloseProfit);		
	///期货结算准备金
	DUMP(Balance);		
	///入金金额
	DUMP(Deposit);		
	///出金金额
	DUMP(Withdraw);		
	///可提资金
	DUMP(Available);		
	///基本准备金
	DUMP(Reserve);		
	///冻结的保证金
	DUMP(FrozenMargin);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpBrokerInvestorField(std::string& buf,const CShfeFtdcBrokerInvestorField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpCurrentTimeField(std::string& buf,const CShfeFtdcCurrentTimeField& ctp)
{
	std::stringstream strDump;	
	///当前日期
	DUMP(CurrDate);		
	///当前时间
	DUMP(CurrTime);		
	///当前时间（毫秒）
	DUMP(CurrMillisec);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpDepartmentField(std::string& buf,const CShfeFtdcDepartmentField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///组织架构代码
	DUMP(DepartmentID);		
	///组织架构名称
	DUMP(DepartmentName);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpDepthMarketDataField(std::string& buf,const CShfeFtdcDepthMarketDataField& ctp)
{
	std::stringstream strDump;	
	///交易日
	DUMP(TradingDay);		
	///合约代码
	DUMP(InstrumentID);		
	///交易所代码
	DUMP(ExchangeID);		
	///合约在交易所的代码
	DUMP(ExchangeInstID);		
	///最新价
	DUMP(LastPrice);		
	///上次结算价
	DUMP(PreSettlementPrice);		
	///昨收盘
	DUMP(PreClosePrice);		
	///昨持仓量
	DUMP(PreOpenInterest);		
	///今开盘
	DUMP(OpenPrice);		
	///最高价
	DUMP(HighestPrice);		
	///最低价
	DUMP(LowestPrice);		
	///数量
	DUMP(Volume);		
	///成交金额
	DUMP(Turnover);		
	///持仓量
	DUMP(OpenInterest);		
	///今收盘
	DUMP(ClosePrice);		
	///本次结算价
	DUMP(SettlementPrice);		
	///涨停板价
	DUMP(UpperLimitPrice);		
	///跌停板价
	DUMP(LowerLimitPrice);		
	///昨虚实度
	DUMP(PreDelta);		
	///今虚实度
	DUMP(CurrDelta);		
	///最后修改时间
	DUMP(UpdateTime);		
	///最后修改毫秒
	DUMP(UpdateMillisec);		
	///申买价一
	DUMP(BidPrice1);		
	///申买量一
	DUMP(BidVolume1);		
	///申卖价一
	DUMP(AskPrice1);		
	///申卖量一
	DUMP(AskVolume1);		
	///申买价二
	DUMP(BidPrice2);		
	///申买量二
	DUMP(BidVolume2);		
	///申卖价二
	DUMP(AskPrice2);		
	///申卖量二
	DUMP(AskVolume2);		
	///申买价三
	DUMP(BidPrice3);		
	///申买量三
	DUMP(BidVolume3);		
	///申卖价三
	DUMP(AskPrice3);		
	///申卖量三
	DUMP(AskVolume3);		
	///申买价四
	DUMP(BidPrice4);		
	///申买量四
	DUMP(BidVolume4);		
	///申卖价四
	DUMP(AskPrice4);		
	///申卖量四
	DUMP(AskVolume4);		
	///申买价五
	DUMP(BidPrice5);		
	///申买量五
	DUMP(BidVolume5);		
	///申卖价五
	DUMP(AskPrice5);		
	///申卖量五
	DUMP(AskVolume5);		
	///当日均价
	DUMP(AveragePrice);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpExchangeField(std::string& buf,const CShfeFtdcExchangeField& ctp)
{
	std::stringstream strDump;	
	///交易所代码
	DUMP(ExchangeID);		
	///交易所名称
	DUMP(ExchangeName);		
	///交易所属性
	DUMP(ExchangeProperty);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpExchangeMarginRateField(std::string& buf,const CShfeFtdcExchangeMarginRateField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///合约代码
	DUMP(InstrumentID);		
	///投机套保标志
	DUMP(HedgeFlag);		
	///多头保证金率
	DUMP(LongMarginRatioByMoney);		
	///多头保证金费
	DUMP(LongMarginRatioByVolume);		
	///空头保证金率
	DUMP(ShortMarginRatioByMoney);		
	///空头保证金费
	DUMP(ShortMarginRatioByVolume);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpExchangeMarginRateAdjustField(std::string& buf,const CShfeFtdcExchangeMarginRateAdjustField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///合约代码
	DUMP(InstrumentID);		
	///投机套保标志
	DUMP(HedgeFlag);		
	///跟随交易所投资者多头保证金率
	DUMP(LongMarginRatioByMoney);		
	///跟随交易所投资者多头保证金费
	DUMP(LongMarginRatioByVolume);		
	///跟随交易所投资者空头保证金率
	DUMP(ShortMarginRatioByMoney);		
	///跟随交易所投资者空头保证金费
	DUMP(ShortMarginRatioByVolume);		
	///交易所多头保证金率
	DUMP(ExchLongMarginRatioByMoney);		
	///交易所多头保证金费
	DUMP(ExchLongMarginRatioByVolume);		
	///交易所空头保证金率
	DUMP(ExchShortMarginRatioByMoney);		
	///交易所空头保证金费
	DUMP(ExchShortMarginRatioByVolume);		
	///不跟随交易所投资者多头保证金率
	DUMP(NoLongMarginRatioByMoney);		
	///不跟随交易所投资者多头保证金费
	DUMP(NoLongMarginRatioByVolume);		
	///不跟随交易所投资者空头保证金率
	DUMP(NoShortMarginRatioByMoney);		
	///不跟随交易所投资者空头保证金费
	DUMP(NoShortMarginRatioByVolume);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpFullIndexNPPField(std::string& buf,const CShfeFtdcFullIndexNPPField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///产品代码
	DUMP(ProductIDs);		
	///报警值(在参数中是警示值,在指标FullIndexNPP中是指标值)
	DUMP(WarnLevel);		
	///多头保证金
	DUMP(LongMargin);		
	///空头保证金
	DUMP(ShortMargin);		
	///总权益
	DUMP(Balance);		
	///报警阈值
	DUMP(RealWarnLevel);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpIndexNPPField(std::string& buf,const CShfeFtdcIndexNPPField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///产品代码
	DUMP(ProductIDs);		
	///报警值(在参数中是警示值,在指标FullIndexNPP中是指标值)
	DUMP(WarnLevel);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpInputOrderField(std::string& buf,const CShfeFtdcInputOrderField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///合约代码
	DUMP(InstrumentID);		
	///报单引用
	DUMP(OrderRef);		
	///用户代码
	DUMP(UserID);		
	///报单价格条件
	DUMP(OrderPriceType);		
	///买卖方向
	DUMP(Direction);		
	///组合开平标志
	DUMP(CombOffsetFlag);		
	///组合投机套保标志
	DUMP(CombHedgeFlag);		
	///价格
	DUMP(LimitPrice);		
	///数量
	DUMP(VolumeTotalOriginal);		
	///有效期类型
	DUMP(TimeCondition);		
	///GTD日期
	DUMP(GTDDate);		
	///成交量类型
	DUMP(VolumeCondition);		
	///最小成交量
	DUMP(MinVolume);		
	///触发条件
	DUMP(ContingentCondition);		
	///止损价
	DUMP(StopPrice);		
	///强平原因
	DUMP(ForceCloseReason);		
	///自动挂起标志
	DUMP(IsAutoSuspend);		
	///业务单元
	DUMP(BusinessUnit);		
	///请求编号
	DUMP(RequestID);		
	///用户强评标志
	DUMP(UserForceClose);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpInputOrderActionField(std::string& buf,const CShfeFtdcInputOrderActionField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///报单操作引用
	DUMP(OrderActionRef);		
	///报单引用
	DUMP(OrderRef);		
	///请求编号
	DUMP(RequestID);		
	///前置编号
	DUMP(FrontID);		
	///会话编号
	DUMP(SessionID);		
	///交易所代码
	DUMP(ExchangeID);		
	///报单编号
	DUMP(OrderSysID);		
	///操作标志
	DUMP(ActionFlag);		
	///价格
	DUMP(LimitPrice);		
	///数量变化
	DUMP(VolumeChange);		
	///用户代码
	DUMP(UserID);		
	///合约代码
	DUMP(InstrumentID);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpInstrumentField(std::string& buf,const CShfeFtdcInstrumentField& ctp)
{
	std::stringstream strDump;
	///合约代码
	DUMP(InstrumentID);		
	///交易所代码
	DUMP(ExchangeID);		
	///合约名称
	DUMP(InstrumentName);		
	///合约在交易所的代码
	DUMP(ExchangeInstID);		
	///产品代码
	DUMP(ProductID);		
	///产品类型
	DUMP(ProductClass);		
	///交割年份
	DUMP(DeliveryYear);		
	///交割月
	DUMP(DeliveryMonth);		
	///市价单最大下单量
	DUMP(MaxMarketOrderVolume);		
	///市价单最小下单量
	DUMP(MinMarketOrderVolume);		
	///限价单最大下单量
	DUMP(MaxLimitOrderVolume);		
	///限价单最小下单量
	DUMP(MinLimitOrderVolume);		
	///合约数量乘数
	DUMP(VolumeMultiple);		
	///最小变动价位
	DUMP(PriceTick);		
	///创建日
	DUMP(CreateDate);		
	///上市日
	DUMP(OpenDate);		
	///到期日
	DUMP(ExpireDate);		
	///开始交割日
	DUMP(StartDelivDate);		
	///结束交割日
	DUMP(EndDelivDate);		
	///合约生命周期状态
	DUMP(InstLifePhase);		
	///当前是否交易
	DUMP(IsTrading);		
	///持仓类型
	DUMP(PositionType);		
	///持仓日期类型
	DUMP(PositionDateType);		
	///多头保证金率
	DUMP(LongMarginRatio);		
	///空头保证金率
	DUMP(ShortMarginRatio);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpInvestorDepartmentFlatField(std::string& buf,const CShfeFtdcInvestorDepartmentFlatField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///组织架构代码
	DUMP(DepartmentID);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpInvestorGroupField(std::string& buf,const CShfeFtdcInvestorGroupField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者分组代码
	DUMP(InvestorGroupID);		
	///投资者分组名称
	DUMP(InvestorGroupName);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpInvestorHashField(std::string& buf,const CShfeFtdcInvestorHashField& ctp)
{
	std::stringstream strDump;	
	///请求中是业务类型，否则是数据MD5值
	DUMP(MD5);		
	///投资者代码(为空代表所有投资者代码)
	DUMP(InvestorIDBeg);		
	///投资者代码(为空代表所有投资者代码)
	DUMP(InvestorIDEnd);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpInvestorLinkManField(std::string& buf,const CShfeFtdcInvestorLinkManField& ctp)
{
	std::stringstream strDump;	
	///投资者代码
	DUMP(InvestorID);		
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者分组代码
	DUMP(InvestorGroupID);		
	///投资者名称
	DUMP(InvestorName);		
	///证件类型
	DUMP(IdentifiedCardType);		
	///证件号码
	DUMP(IdentifiedCardNo);		
	///是否活跃
	DUMP(IsActive);		
	///联系电话
	DUMP(Telephone);		
	///通讯地址
	DUMP(Address);		
	///指定下单人证件类型
	DUMP(OrderManIdentifiedCardType);		
	///指定下单人证件号码
	DUMP(OrderManIdentifiedCardNo);		
	///指定下单人名称
	DUMP(OrderManPersonName);		
	///指定下单人联系电话
	DUMP(OrderManTelephone);		
	///指定下单人通讯地址
	DUMP(OrderManAddress);		
	///指定下单人邮政编码
	DUMP(OrderManZipCode);		
	///资金调拨人证件类型
	DUMP(FundManIdentifiedCardType);		
	///资金调拨人证件号码
	DUMP(FundManIdentifiedCardNo);		
	///资金调拨人名称
	DUMP(FundManPersonName);		
	///资金调拨人联系电话
	DUMP(FundManTelephone);		
	///资金调拨人通讯地址
	DUMP(FundManAddress);		
	///资金调拨人邮政编码
	DUMP(FundManZipCode);		
	///开户授权人证件类型
	DUMP(OpenManIdentifiedCardType);		
	///开户授权人证件号码
	DUMP(OpenManIdentifiedCardNo);		
	///开户授权人名称
	DUMP(OpenManPersonName);		
	///开户授权人联系电话
	DUMP(OpenManTelephone);		
	///开户授权人通讯地址
	DUMP(OpenManAddress);		
	///开户授权人邮政编码
	DUMP(OpenManZipCode);		
	///结算单确认人证件类型
	DUMP(SettlementManIdentifiedCardType);		
	///结算单确认人证件号码
	DUMP(SettlementManIdentifiedCardNo);		
	///结算单确认人名称
	DUMP(SettlementManPersonName);		
	///结算单确认人联系电话
	DUMP(SettlementManTelephone);		
	///结算单确认人通讯地址
	DUMP(SettlementManAddress);		
	///结算单确认人邮政编码
	DUMP(SettlementManZipCode);		
	///开户日期
	DUMP(OpenDate);		
	///手机
	DUMP(Mobile);		
	///电子邮件
	DUMP(EMail);		
	///投资者类型
	DUMP(InvestorType);		
	///国家代码
	DUMP(PhoneCountryCode);		
	///区号
	DUMP(PhoneAreaCode);		
	///开户授权人国家代码
	DUMP(OpenPhoneCountryCode);		
	///开户授权人区号
	DUMP(OpenPhoneAreaCode);		
	///指定下单人国家代码
	DUMP(OrderPhoneCountryCode);		
	///指定下单人区号
	DUMP(OrderPhoneAreaCode);		
	///资金调拨人国家代码
	DUMP(FundPhoneCountryCode);		
	///资金调拨人区号
	DUMP(FundPhoneAreaCode);		
	///结算单确认人国家代码
	DUMP(SettlePhoneCountryCode);		
	///结算单确认人区号
	DUMP(SettlePhoneAreaCode);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpInvestorMarginRateField(std::string& buf,const CShfeFtdcInvestorMarginRateField& ctp)
{
	std::stringstream strDump;	
	///合约代码
	DUMP(InstrumentID);		
	///投资者范围
	DUMP(InvestorRange);		
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///投机套保标志
	DUMP(HedgeFlag);		
	///多头保证金率
	DUMP(LongMarginRatioByMoney);		
	///多头保证金费
	DUMP(LongMarginRatioByVolume);		
	///空头保证金率
	DUMP(ShortMarginRatioByMoney);		
	///空头保证金费
	DUMP(ShortMarginRatioByVolume);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpInvestorPatternField(std::string& buf,const CShfeFtdcInvestorPatternField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///业务类型
	DUMP(BizType);		
	///通知途径
	DUMP(Method);		
	///模板代码
	DUMP(PatternID);		
	///是否启用
	DUMP(IsActive);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpInvestorPositionStaticField(std::string& buf,const CShfeFtdcInvestorPositionStaticField& ctp)
{
	std::stringstream strDump;	
	///产品代码
	DUMP(ProductID);		
	///合约编号
	DUMP(InstrumentID);		
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///昨持仓
	DUMP(YdPosition);		
	///总持仓
	DUMP(Position);		
	///多头持仓
	DUMP(LongPosition);		
	///空头持仓
	DUMP(ShortPosition);		
	///净持仓
	DUMP(NetPosition);		
	///投机多头持仓
	DUMP(SpecuLongPosi);		
	///投机空头持仓
	DUMP(SpecuShortPosi);		
	///保值多头持仓
	DUMP(HedgeLongPosi);		
	///保值空头持仓
	DUMP(HedgeShortPosi);		
	///今仓
	DUMP(TodayPosition);		
	///总持仓成本
	DUMP(PositionCost);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpInvestorRiskAccountField(std::string& buf,const CShfeFtdcInvestorRiskAccountField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///投资者帐号
	DUMP(AccountID);		
	///上次质押金额
	DUMP(PreMortgage);		
	///上次信用额度
	DUMP(PreCredit);		
	///上次存款额
	DUMP(PreDeposit);		
	///上次总权益
	DUMP(PreBalance);		
	///上次占用的保证金
	DUMP(PreMargin);		
	///出入金金额
	DUMP(Withdraw);		
	///当前保证金总额
	DUMP(CurrMargin);		
	///手续费
	DUMP(Commission);		
	///平仓盈亏
	DUMP(CloseProfit);		
	///持仓盈亏
	DUMP(PositionProfit);		
	///总权益
	DUMP(Balance);		
	///可用资金
	DUMP(Available);		
	///质押金额
	DUMP(Mortgage);		
	///交易所保证金
	DUMP(ExchangeMargin);		
	///基本准备金
	DUMP(Reserve);		
	///可取资金
	DUMP(WithdrawQuota);		
	///信用额度
	DUMP(Credit);		
	///上次交易所保证金
	DUMP(PreExchMargin);		
	///历史强平次数
	DUMP(ForceCloseStat);		
	///投资者交割保证金
	DUMP(DeliveryMargin);		
	///交易所交割保证金
	DUMP(ExchangeDeliveryMargin);		
	///保证金冻结
	DUMP(FrozenMargin);		
	///手续费冻结
	DUMP(FrozenCommission);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpInvestorSumInfoField(std::string& buf,const CShfeFtdcInvestorSumInfoField& ctp)
{
	std::stringstream strDump;	
	///投资者人数
	DUMP(Count);		
	///MD5校验码1
	DUMP(md5_1);		
	///MD5校验码2
	DUMP(md5_2);		
	///MD5校验码3
	DUMP(md5_3);		
	///MD5校验码4
	DUMP(md5_4);		
	///MD5校验码5
	DUMP(md5_5);		
	///MD5校验码6
	DUMP(md5_6);		
	///MD5校验码7
	DUMP(md5_7);		
	///MD5校验码8
	DUMP(md5_8);		
	///MD5校验码9
	DUMP(md5_9);		
	///MD5校验码10
	DUMP(md5_10);		
	///MD5校验码11
	DUMP(md5_11);		
	///MD5校验码12
	DUMP(md5_12);		
	///MD5校验码13
	DUMP(md5_13);		
	///MD5校验码14
	DUMP(md5_14);		
	///MD5校验码15
	DUMP(md5_15);		
	///MD5校验码16
	DUMP(md5_16);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpInvestorTradeStaticField(std::string& buf,const CShfeFtdcInvestorTradeStaticField& ctp)
{
	std::stringstream strDump;	
	///产品代码
	DUMP(ProductID);		
	///合约编号
	DUMP(InstrumentID);		
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///总成交量
	DUMP(TotalVol);		
	///总成交额
	DUMP(TotalAmt);		
	///买成交量
	DUMP(BuyVol);		
	///买成交额
	DUMP(BuyAmt);		
	///卖成交量
	DUMP(SellVol);		
	///卖成交额
	DUMP(SellAmt);		
	///净买入成交量
	DUMP(NetVol);		
	///净买入成交额
	DUMP(NetAmt);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpNormalRiskQueryField(std::string& buf,const CShfeFtdcNormalRiskQueryField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///用户代码
	DUMP(UserID);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpNoticePatternField(std::string& buf,const CShfeFtdcNoticePatternField& ctp)
{
	std::stringstream strDump;
	///经纪公司代码
	DUMP(BrokerID);
	///业务类型
	DUMP(BizType);
	///通知途径
	DUMP(Method);
	///业务名称
	DUMP(BizName);
	///最近修改模版的用户代码
	DUMP(UserID);
	///是否启用
	DUMP(IsActive);
	///通知模版内容
	DUMP(Pattern);

	buf=strDump.str();
}	
void DumpFromCtp::DumpNoticeTokenField(std::string& buf,const CShfeFtdcNoticeTokenField& ctp)
{
	std::stringstream strDump;	
	///自动替换字段
	DUMP(Token);		
	///自动替换字段的描述
	DUMP(Description);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpOrderStatField(std::string& buf,const CShfeFtdcOrderStatField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///交易所品种合约代码组合(交易所代码使用前缀e:，格式如cu,e:SHFE,cu1105)
	DUMP(ExchangeProductInstID);		
	///投资者代码
	DUMP(InvestorID);		
	///总报单量
	DUMP(TotalVol);		
	///买报单量
	DUMP(BuyVol);		
	///卖报单量
	DUMP(SellVol);		
	///净买入报单量
	DUMP(NetVol);		
	///有成交报单数
	DUMP(TradeCount);		
	///总报单数
	DUMP(TotalCount);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpPositionStatField(std::string& buf,const CShfeFtdcPositionStatField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///交易所品种合约代码组合(交易所代码使用前缀e:，格式如cu,e:SHFE,cu1105)
	DUMP(ExchangeProductInstID);		
	///投资者代码
	DUMP(InvestorID);		
	///昨持仓
	DUMP(YdPosition);		
	///总持仓
	DUMP(Position);		
	///多头持仓
	DUMP(LongPosition);		
	///空头持仓
	DUMP(ShortPosition);		
	///净持仓
	DUMP(NetPosition);		
	///投机多头持仓
	DUMP(SpecuLongPosi);		
	///投机空头持仓
	DUMP(SpecuShortPosi);		
	///保值多头持仓
	DUMP(HedgeLongPosi);		
	///保值空头持仓
	DUMP(HedgeShortPosi);		
	///今仓
	DUMP(TodayPosition);		
	///总持仓成本
	DUMP(PositionCost);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpPredictRiskAccountField(std::string& buf,const CShfeFtdcPredictRiskAccountField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///初始权益
	DUMP(Balance0);		
	///D1亏损
	DUMP(Lose1);		
	///D1权益
	DUMP(Balance1);		
	///D2亏损
	DUMP(Lose2);		
	///D2权益
	DUMP(Balance2);		
	///D3亏损
	DUMP(Lose3);		
	///D3权益
	DUMP(Balance3);		
	///D4亏损
	DUMP(Lose4);		
	///D4权益
	DUMP(Balance4);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpPredictRiskPositionField(std::string& buf,const CShfeFtdcPredictRiskPositionField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///合约代码
	DUMP(InstrumentID);		
	///多头持仓
	DUMP(LongVol);		
	///空头持仓
	DUMP(ShortVol);		
	///净持仓
	DUMP(NetVol);		
	///初始价格
	DUMP(Price0);		
	///D1结算价
	DUMP(Price1);		
	///D1涨跌幅
	DUMP(Limit1);		
	///D2涨跌幅
	DUMP(Limit2);		
	///D3涨跌幅
	DUMP(Limit3);		
	///D4涨跌幅
	DUMP(Limit4);		
	///合约乘数
	DUMP(Multiple);		
	///D1亏损
	DUMP(Lose1);		
	///D2亏损
	DUMP(Lose2);		
	///D3亏损
	DUMP(Lose3);		
	///D4亏损
	DUMP(Lose4);		
	///可留手数
	DUMP(LeftVol);		
	///D1应强平
	DUMP(ShouldClose);		
	///调整后可强平
	DUMP(CanClose);		
	///当前保证金率
	DUMP(CurrMarginRate);		
	///调整后保证金率
	DUMP(MarginRate1);		
	///净持仓保证金
	DUMP(NetMargin1);		
	///D1可用
	DUMP(Available1);		
	///1手保证金
	DUMP(Margin1PerVol);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpPriceVaryParamField(std::string& buf,const CShfeFtdcPriceVaryParamField& ctp)
{
	std::stringstream strDump;	
	///合约编号
	DUMP(InstrumentID);		
	///价格波动方向
	DUMP(Direction);		
	///价格波动幅度(>=0有效)
	DUMP(Pecent);		
	///价格波动的基准价类型
	DUMP(BasePriceType);		
	///自定义基准价
	DUMP(BasePrice);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpProductField(std::string& buf,const CShfeFtdcProductField& ctp)
{
	std::stringstream strDump;	
	///产品代码
	DUMP(ProductID);		
	///产品名称
	DUMP(ProductName);		
	///交易所代码
	DUMP(ExchangeID);		
	///产品类型
	DUMP(ProductClass);		
	///合约数量乘数
	DUMP(VolumeMultiple);		
	///最小变动价位
	DUMP(PriceTick);		
	///市价单最大下单量
	DUMP(MaxMarketOrderVolume);		
	///市价单最小下单量
	DUMP(MinMarketOrderVolume);		
	///限价单最大下单量
	DUMP(MaxLimitOrderVolume);		
	///限价单最小下单量
	DUMP(MinLimitOrderVolume);		
	///持仓类型
	DUMP(PositionType);		
	///持仓日期类型
	DUMP(PositionDateType);		
	///平仓处理类型
	DUMP(CloseDealType);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpQueryBrokerDepositField(std::string& buf,const CShfeFtdcQueryBrokerDepositField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///交易所代码
	DUMP(ExchangeID);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRemoveRiskParkedOrderField(std::string& buf,const CShfeFtdcRemoveRiskParkedOrderField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///用户代码
	DUMP(UserID);		
	///投资者代码
	DUMP(InvestorID);		
	///预埋报单编号
	DUMP(ParkedOrderID);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRiskInvestorParamField(std::string& buf,const CShfeFtdcRiskInvestorParamField& ctp)
{
	std::stringstream strDump;	
	///参数代码
	DUMP(ParamID);		
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///参数值
	DUMP(ParamValue);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRiskLoginInfoField(std::string& buf,const CShfeFtdcRiskLoginInfoField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///用户代码
	DUMP(UserID);		
	///本地前置会话编号
	DUMP(LocalSessionID);		
	///风控前置会话编号
	DUMP(SessionID);		
	///风控前置编号
	DUMP(FrontID);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRiskNotifyTokenField(std::string& buf,const CShfeFtdcRiskNotifyTokenField& ctp)
{
	std::stringstream strDump;	
	///自动替换字段
	DUMP(Token);		
	///自动替换字段的描述
	DUMP(Description);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRiskParamInfoField(std::string& buf,const CShfeFtdcRiskParamInfoField& ctp)
{
	std::stringstream strDump;	
	///参数代码
	DUMP(ParamID);		
	///参数说明
	DUMP(Description);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRiskParkedOrderField(std::string& buf,const CShfeFtdcRiskParkedOrderField& ctp)
{
	std::stringstream strDump;	
	///预埋报单编号
	DUMP(ParkedOrderID);		
	///预埋单本地编号
	DUMP(LocalID);		
	///风控用户类型
	DUMP(UserType);		
	///预埋单状态
	DUMP(Status);		
	///预埋单状态信息
	DUMP(StatusMsg);		
	///触发类型
	DUMP(TriggerType);		
	///交易阶段
	DUMP(TradeSegment);		
	///交易所代码
	DUMP(ExchangeID);		
	///风控强平类型
	DUMP(FCType);		
	///辅助强平单的生成时间
	DUMP(Time1);		
	///辅助强平单的生成时间（毫秒）
	DUMP(Millisec1);		
	///强平单的提交时间
	DUMP(Time2);		
	///强平单的提交时间（毫秒）
	DUMP(Millisec2);		
	///强平场景编号
	DUMP(FCSceneId);		
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///合约代码
	DUMP(InstrumentID);		
	///报单引用
	DUMP(OrderRef);		
	///用户代码
	DUMP(UserID);		
	///报单价格条件
	DUMP(OrderPriceType);		
	///买卖方向
	DUMP(Direction);		
	///组合开平标志
	DUMP(CombOffsetFlag);		
	///组合投机套保标志
	DUMP(CombHedgeFlag);		
	///价格
	DUMP(LimitPrice);		
	///数量
	DUMP(VolumeTotalOriginal);		
	///有效期类型
	DUMP(TimeCondition);		
	///GTD日期
	DUMP(GTDDate);		
	///成交量类型
	DUMP(VolumeCondition);		
	///最小成交量
	DUMP(MinVolume);		
	///触发条件
	DUMP(ContingentCondition);		
	///止损价
	DUMP(StopPrice);		
	///强平原因
	DUMP(ForceCloseReason);		
	///自动挂起标志
	DUMP(IsAutoSuspend);		
	///业务单元
	DUMP(BusinessUnit);		
	///请求编号
	DUMP(RequestID);		
	///用户强评标志
	DUMP(UserForceClose);		
	///报单提交状态
	DUMP(OrderSubmitStatus);		
	///报单状态
	DUMP(OrderStatus);		
	///报单状态信息
	DUMP(OrderStatusMsg);		
	///错误代码
	DUMP(ErrorID);		
	///错误信息
	DUMP(ErrorMsg);		
	///预埋时间
	DUMP(ParkedTime);		
	///预埋量
	DUMP(OriginalParkedVol);		
	///预埋时可平量
	DUMP(MaxCloseVol1);		
	///触发时可平量
	DUMP(MaxCloseVol2);		
	///预埋时追保
	DUMP(Call1);		
	///触发时追保
	DUMP(Call2);		
	///预埋时出入金
	DUMP(MoneyIO1);		
	///触发时出入金
	DUMP(MoneyIO2);		
	///删除原因
	DUMP(DeleteReason);		
	///强平资金释放标准
	DUMP(ForceCloseRelease);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRiskPatternField(std::string& buf,const CShfeFtdcRiskPatternField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///业务类型
	DUMP(BizType);		
	///模板代码
	DUMP(PatternID);		
	///模板名称
	DUMP(PatternName);		
	///通知模版内容
	DUMP(Pattern);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRiskSyncAccountField(std::string& buf,const CShfeFtdcRiskSyncAccountField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///出入金金额
	DUMP(Withdraw);		
	///当前保证金总额
	DUMP(CurrMargin);		
	///手续费
	DUMP(Commission);		
	///平仓盈亏
	DUMP(CloseProfit);		
	///持仓盈亏
	DUMP(PositionProfit);		
	///总权益
	DUMP(Balance);		
	///可用资金
	DUMP(Available);		
	///质押金额
	DUMP(Mortgage);		
	///交易所保证金
	DUMP(ExchangeMargin);		
	///可取资金
	DUMP(WithdrawQuota);		
	///信用额度
	DUMP(Credit);		
	///保证金冻结
	DUMP(FrozenMargin);		
	///手续费冻结
	DUMP(FrozenCommission);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRiskSyncInvestorField(std::string& buf,const CShfeFtdcRiskSyncInvestorField& ctp)
{
	std::stringstream strDump;	
	///操作标志(修改或删除)
	DUMP(Action);		
	///投资者代码
	DUMP(InvestorID);		
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者分组代码
	DUMP(InvestorGroupID);		
	///投资者名称
	DUMP(InvestorName);		
	///证件类型
	DUMP(IdentifiedCardType);		
	///证件号码
	DUMP(IdentifiedCardNo);		
	///是否活跃
	DUMP(IsActive);		
	///联系电话
	DUMP(Telephone);		
	///通讯地址
	DUMP(Address);		
	///开户日期
	DUMP(OpenDate);		
	///手机
	DUMP(Mobile);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRiskUserEventField(std::string& buf,const CShfeFtdcRiskUserEventField& ctp)
{
	std::stringstream strDump;	
	///用户事件当天的序号
	DUMP(SequenceNo);		
	///事件发生日期
	DUMP(EventDate);		
	///事件发生时间
	DUMP(EventTime);		
	///经纪公司代码
	DUMP(BrokerID);		
	///用户代码
	DUMP(UserID);		
	///事件类型
	DUMP(EventType);		
	///事件信息
	DUMP(EventInfo);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRiskUserFunctionField(std::string& buf,const CShfeFtdcRiskUserFunctionField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///用户代码
	DUMP(UserID);		
	///权限名称
	DUMP(Function);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRspForceClosePositionField(std::string& buf,const CShfeFtdcRspForceClosePositionField& ctp)
{
	std::stringstream strDump;	
	///合约代码
	DUMP(InstrumentID);		
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///持仓多空方向
	DUMP(PosiDirection);		
	///投机套保标志
	DUMP(HedgeFlag);		
	///持仓日期
	DUMP(PositionDate);		
	///当前持仓数量
	DUMP(Position);		
	///需强平持仓数量
	DUMP(FCPosition);		
	///强平价格类型
	DUMP(FCPriceType);		
	///限价调整点数
	DUMP(PriceTick);		
	///强平价格
	DUMP(FCPrice);		
	///平仓释放的保证金
	DUMP(ReleaseMargin);		
	///平仓盈亏
	DUMP(CloseProfit);		
	///强平场景编号
	DUMP(FCID);		
	///辅助强平单的生成时间
	DUMP(Time);		
	///当前时间（毫秒）
	DUMP(CurrMillisec);		
	///平仓释放的交易所保证金
	DUMP(ExchReleaseMargin);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRspInfoField(std::string& buf,const CShfeFtdcRspInfoField& ctp)
{
	std::stringstream strDump;	
	///错误代码
	DUMP(ErrorID);		
	///错误信息
	DUMP(ErrorMsg);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRspInstPositionRateField(std::string& buf,const CShfeFtdcRspInstPositionRateField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///合约代码
	DUMP(InstrumentID);		
	///散户保值买入持仓量
	DUMP(hbtotal_amt_little);		
	///中户保值买入持仓量
	DUMP(hbtotal_amt_medium);		
	///大户保值买入持仓量
	DUMP(hbtotal_amt_large);		
	///散户保值卖出持仓量
	DUMP(hstotal_amt_little);		
	///中户保值卖出持仓量
	DUMP(hstotal_amt_medium);		
	///大户保值卖出持仓量
	DUMP(hstotal_amt_large);		
	///散户保值持仓量
	DUMP(htotal_amt_little);		
	///中户保值持仓量
	DUMP(htotal_amt_medium);		
	///大户保值持仓量
	DUMP(htotal_amt_large);		
	///散户投机买入持仓量
	DUMP(sbtotal_amt_little);		
	///中户投机买入持仓量
	DUMP(sbtotal_amt_medium);		
	///大户投机买入持仓量
	DUMP(sbtotal_amt_large);		
	///散户投机卖出持仓量
	DUMP(sstotal_amt_little);		
	///中户投机卖出持仓量
	DUMP(sstotal_amt_medium);		
	///大户投机卖出持仓量
	DUMP(sstotal_amt_large);		
	///散户投机持仓量
	DUMP(stotal_amt_little);		
	///中户投机持仓量
	DUMP(stotal_amt_medium);		
	///大户投机持仓量
	DUMP(stotal_amt_large);		
	///散户买入持仓量
	DUMP(buytotal_amt_little);		
	///中户买入持仓量
	DUMP(buytotal_amt_medium);		
	///大户买入持仓量
	DUMP(buytotal_amt_large);		
	///散户卖出持仓量
	DUMP(selltotal_amt_little);		
	///中户卖出持仓量
	DUMP(selltotal_amt_medium);		
	///大户卖出持仓量
	DUMP(selltotal_amt_large);		
	///散户总持仓量
	DUMP(total_amt_little);		
	///中户总持仓量
	DUMP(total_amt_medium);		
	///大户总持仓量
	DUMP(total_amt_large);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRspProductPositionRateField(std::string& buf,const CShfeFtdcRspProductPositionRateField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///产品代码
	DUMP(ProductID);		
	///散户保值买入持仓量
	DUMP(hbtotal_amt_little);		
	///中户保值买入持仓量
	DUMP(hbtotal_amt_medium);		
	///大户保值买入持仓量
	DUMP(hbtotal_amt_large);		
	///散户保值卖出持仓量
	DUMP(hstotal_amt_little);		
	///中户保值卖出持仓量
	DUMP(hstotal_amt_medium);		
	///大户保值卖出持仓量
	DUMP(hstotal_amt_large);		
	///散户保值持仓量
	DUMP(htotal_amt_little);		
	///中户保值持仓量
	DUMP(htotal_amt_medium);		
	///大户保值持仓量
	DUMP(htotal_amt_large);		
	///散户投机买入持仓量
	DUMP(sbtotal_amt_little);		
	///中户投机买入持仓量
	DUMP(sbtotal_amt_medium);		
	///大户投机买入持仓量
	DUMP(sbtotal_amt_large);		
	///散户投机卖出持仓量
	DUMP(sstotal_amt_little);		
	///中户投机卖出持仓量
	DUMP(sstotal_amt_medium);		
	///大户投机卖出持仓量
	DUMP(sstotal_amt_large);		
	///散户投机持仓量
	DUMP(stotal_amt_little);		
	///中户投机持仓量
	DUMP(stotal_amt_medium);		
	///大户投机持仓量
	DUMP(stotal_amt_large);		
	///散户买入持仓量
	DUMP(buytotal_amt_little);		
	///中户买入持仓量
	DUMP(buytotal_amt_medium);		
	///大户买入持仓量
	DUMP(buytotal_amt_large);		
	///散户卖出持仓量
	DUMP(selltotal_amt_little);		
	///中户卖出持仓量
	DUMP(selltotal_amt_medium);		
	///大户卖出持仓量
	DUMP(selltotal_amt_large);		
	///散户总持仓量
	DUMP(total_amt_little);		
	///中户总持仓量
	DUMP(total_amt_medium);		
	///大户总持仓量
	DUMP(total_amt_large);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRspRiskUserLoginField(std::string& buf,const CShfeFtdcRspRiskUserLoginField& ctp)
{
	std::stringstream strDump;	
	///交易日
	DUMP(TradingDay);		
	///经纪公司代码
	DUMP(BrokerID);		
	///用户代码
	DUMP(UserID);		
	///客户端版本,20091230版Version=1,之前版本Version=0
	DUMP(Version);		
	///前置类型
	DUMP(FrontType);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpRspSafePriceRangeField(std::string& buf,const CShfeFtdcRspSafePriceRangeField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///合约代码
	DUMP(InstrumentID);		
	///基准价格
	DUMP(BasePrice);		
	///波动价格
	DUMP(LimitPrice);		
	///总波动幅度
	DUMP(VaryPecent);		
	///停板个数
	DUMP(LimitDayCnt);		
	///总波动点数
	DUMP(VaryTickCnt);		
	///停板点数
	DUMP(LimitTickCnt);		
	///是否有波动限制
	DUMP(HasLimit);		
	///涨跌停
	DUMP(PecentPerLimit);		
	///停板波动
	DUMP(InLimitVaryPct);		
	///停板外波动
	DUMP(OutLimitVaryPct);		
	///总买持
	DUMP(LongVol);		
	///总卖持
	DUMP(ShortVol);		
	///波动方向
	DUMP(Direction);		
	///不利方向
	DUMP(BadDir);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpSeqBizNoticeField(std::string& buf,const CShfeFtdcSeqBizNoticeField& ctp)
{
	std::stringstream strDump;	
	///流中唯一的序列号
	DUMP(UniqSequenceNo);		
	///事件发生日期
	DUMP(TradingDay);		
	///通知事件在当天的序号
	DUMP(SequenceNo);		
	///风险通知途径
	DUMP(Method);		
	///事件发生时间
	DUMP(EventTime);		
	///经纪公司代码
	DUMP(BrokerID);		
	///用户代码
	DUMP(UserID);		
	///投资者代码
	DUMP(InvestorID);		
	///业务类型
	DUMP(BizType);		
	///通知状态
	DUMP(Status);		
	///通知内容
	DUMP(Message);		
	///错误信息
	DUMP(ErrorMsg);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpSeqDepositField(std::string& buf,const CShfeFtdcSeqDepositField& ctp)
{
	std::stringstream strDump;	
	///流中唯一的序列号
	DUMP(UniqSequenceNo);		
	///出入金类型
	DUMP(Type);		
	///有效标志-有效或冲正
	DUMP(Flag);		
	///出入金方向
	DUMP(Direction);		
	///交易日
	DUMP(TradingDay);		
	///流水号
	DUMP(SequenceNo);		
	///时间
	DUMP(Time);		
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///出入金金额
	DUMP(Amount);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpSeqPreRiskAccountField(std::string& buf,const CShfeFtdcSeqPreRiskAccountField& ctp)
{
	std::stringstream strDump;	
	///流中唯一的序列号
	DUMP(UniqSequenceNo);		
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///投资者帐号
	DUMP(AccountID);		
	///上次质押金额
	DUMP(PreMortgage);		
	///上次信用额度
	DUMP(PreCredit);		
	///上次存款额
	DUMP(PreDeposit);		
	///上次总权益
	DUMP(PreBalance);		
	///上次占用的保证金
	DUMP(PreMargin);		
	///基本准备金
	DUMP(Reserve);		
	///上次交易所保证金
	DUMP(PreExchMargin);		
	///历史强平次数
	DUMP(ForceCloseStat);		
	///投资者交割保证金
	DUMP(DeliveryMargin);		
	///交易所交割保证金
	DUMP(ExchangeDeliveryMargin);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpSeqRiskNotifyBField(std::string& buf,const CShfeFtdcSeqRiskNotifyBField& ctp)
{
	std::stringstream strDump;	
	///流中唯一的序列号
	DUMP(UniqSequenceNo);		
	///风险通知事件在当天的序号
	DUMP(SequenceNo);		
	///事件发生日期
	DUMP(EventDate);		
	///事件发生时间
	DUMP(EventTime);		
	///经纪公司代码
	DUMP(BrokerID);		
	///请求发送该风险通知的用户代码
	DUMP(UserID);		
	///投资者代码
	DUMP(InvestorID);		
	///通知类型
	DUMP(NotifyClass);		
	///风险通知途径
	DUMP(NotifyMethod);		
	///风险通知状态
	DUMP(NotifyStatus);		
	///通知内容
	DUMP(Message);		
	///预留字段(人工通知-通知操作员，否则为错误原因)
	DUMP(Reserve);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpSeqRiskParkedOrderField(std::string& buf,const CShfeFtdcSeqRiskParkedOrderField& ctp)
{
	std::stringstream strDump;	
	///流中唯一的序列号
	DUMP(UniqSequenceNo);		
	///预埋报单编号
	DUMP(ParkedOrderID);		
	///预埋单本地编号
	DUMP(LocalID);		
	///风控用户类型
	DUMP(UserType);		
	///预埋单状态
	DUMP(Status);		
	///预埋单状态信息
	DUMP(StatusMsg);		
	///触发类型
	DUMP(TriggerType);		
	///交易阶段
	DUMP(TradeSegment);		
	///交易所代码
	DUMP(ExchangeID);		
	///风控强平类型
	DUMP(FCType);		
	///辅助强平单的生成时间
	DUMP(Time1);		
	///辅助强平单的生成时间（毫秒）
	DUMP(Millisec1);		
	///强平单的提交时间
	DUMP(Time2);		
	///强平单的提交时间（毫秒）
	DUMP(Millisec2);		
	///强平场景编号
	DUMP(FCSceneId);		
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///合约代码
	DUMP(InstrumentID);		
	///报单引用
	DUMP(OrderRef);		
	///用户代码
	DUMP(UserID);		
	///报单价格条件
	DUMP(OrderPriceType);		
	///买卖方向
	DUMP(Direction);		
	///组合开平标志
	DUMP(CombOffsetFlag);		
	///组合投机套保标志
	DUMP(CombHedgeFlag);		
	///价格
	DUMP(LimitPrice);		
	///数量
	DUMP(VolumeTotalOriginal);		
	///有效期类型
	DUMP(TimeCondition);		
	///GTD日期
	DUMP(GTDDate);		
	///成交量类型
	DUMP(VolumeCondition);		
	///最小成交量
	DUMP(MinVolume);		
	///触发条件
	DUMP(ContingentCondition);		
	///止损价
	DUMP(StopPrice);		
	///强平原因
	DUMP(ForceCloseReason);		
	///自动挂起标志
	DUMP(IsAutoSuspend);		
	///业务单元
	DUMP(BusinessUnit);		
	///请求编号
	DUMP(RequestID);		
	///用户强评标志
	DUMP(UserForceClose);		
	///报单提交状态
	DUMP(OrderSubmitStatus);		
	///报单状态
	DUMP(OrderStatus);		
	///报单状态信息
	DUMP(OrderStatusMsg);		
	///错误代码
	DUMP(ErrorID);		
	///错误信息
	DUMP(ErrorMsg);		
	///预埋时间
	DUMP(ParkedTime);		
	///预埋量
	DUMP(OriginalParkedVol);		
	///预埋时可平量
	DUMP(MaxCloseVol1);		
	///触发时可平量
	DUMP(MaxCloseVol2);		
	///预埋时追保
	DUMP(Call1);		
	///触发时追保
	DUMP(Call2);		
	///预埋时出入金
	DUMP(MoneyIO1);		
	///触发时出入金
	DUMP(MoneyIO2);		
	///删除原因
	DUMP(DeleteReason);		
	///强平资金释放标准
	DUMP(ForceCloseRelease);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpSequencialBrokerUserEventField(std::string& buf,const CShfeFtdcSequencialBrokerUserEventField& ctp)
{
	std::stringstream strDump;	
	///流中唯一的序列号
	DUMP(UniqSequenceNo);		
	///经纪公司代码
	DUMP(BrokerID);		
	///用户代码
	DUMP(UserID);		
	///用户事件类型
	DUMP(UserEventType);		
	///用户事件序号
	DUMP(EventSequenceNo);		
	///事件发生日期
	DUMP(EventDate);		
	///事件发生时间
	DUMP(EventTime);		
	///用户事件信息
	DUMP(UserEventInfo);		
	///投资者代码
	DUMP(InvestorID);		
	///合约代码
	DUMP(InstrumentID);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpSequencialOrderField(std::string& buf,const CShfeFtdcSequencialOrderField& ctp)
{
	std::stringstream strDump;	
	///流中唯一的序列号
	DUMP(UniqSequenceNo);		
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///合约代码
	DUMP(InstrumentID);		
	///报单引用
	DUMP(OrderRef);		
	///用户代码
	DUMP(UserID);		
	///报单价格条件
	DUMP(OrderPriceType);		
	///买卖方向
	DUMP(Direction);		
	///组合开平标志
	DUMP(CombOffsetFlag);		
	///组合投机套保标志
	DUMP(CombHedgeFlag);		
	///价格
	DUMP(LimitPrice);		
	///数量
	DUMP(VolumeTotalOriginal);		
	///有效期类型
	DUMP(TimeCondition);		
	///GTD日期
	DUMP(GTDDate);		
	///成交量类型
	DUMP(VolumeCondition);		
	///最小成交量
	DUMP(MinVolume);		
	///触发条件
	DUMP(ContingentCondition);		
	///止损价
	DUMP(StopPrice);		
	///强平原因
	DUMP(ForceCloseReason);		
	///自动挂起标志
	DUMP(IsAutoSuspend);		
	///业务单元
	DUMP(BusinessUnit);		
	///请求编号
	DUMP(RequestID);		
	///本地报单编号
	DUMP(OrderLocalID);		
	///交易所代码
	DUMP(ExchangeID);		
	///会员代码
	DUMP(ParticipantID);		
	///客户代码
	DUMP(ClientID);		
	///合约在交易所的代码
	DUMP(ExchangeInstID);		
	///交易所交易员代码
	DUMP(TraderID);		
	///安装编号
	DUMP(InstallID);		
	///报单提交状态
	DUMP(OrderSubmitStatus);		
	///报单提示序号
	DUMP(NotifySequence);		
	///交易日
	DUMP(TradingDay);		
	///结算编号
	DUMP(SettlementID);		
	///报单编号
	DUMP(OrderSysID);		
	///报单来源
	DUMP(OrderSource);		
	///报单状态
	DUMP(OrderStatus);		
	///报单类型
	DUMP(OrderType);		
	///今成交数量
	DUMP(VolumeTraded);		
	///剩余数量
	DUMP(VolumeTotal);		
	///报单日期
	DUMP(InsertDate);		
	///委托时间
	DUMP(InsertTime);		
	///激活时间
	DUMP(ActiveTime);		
	///挂起时间
	DUMP(SuspendTime);		
	///最后修改时间
	DUMP(UpdateTime);		
	///撤销时间
	DUMP(CancelTime);		
	///最后修改交易所交易员代码
	DUMP(ActiveTraderID);		
	///结算会员编号
	DUMP(ClearingPartID);		
	///序号
	DUMP(SequenceNo);		
	///前置编号
	DUMP(FrontID);		
	///会话编号
	DUMP(SessionID);		
	///用户端产品信息
	DUMP(UserProductInfo);		
	///状态信息
	DUMP(StatusMsg);		
	///用户强评标志
	DUMP(UserForceClose);		
	///操作用户代码
	DUMP(ActiveUserID);		
	///经纪公司报单编号
	DUMP(BrokerOrderSeq);		
	///相关报单
	DUMP(RelativeOrderSysID);		
	///郑商所成交数量
	DUMP(ZCETotalTradedVolume);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpSequencialPositionField(std::string& buf,const CShfeFtdcSequencialPositionField& ctp)
{
	std::stringstream strDump;	
	///流中唯一的序列号
	DUMP(UniqSequenceNo);		
	///合约代码
	DUMP(InstrumentID);		
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///持仓多空方向
	DUMP(PosiDirection);		
	///投机套保标志
	DUMP(HedgeFlag);		
	///持仓日期
	DUMP(PositionDate);		
	///上日持仓
	DUMP(YdPosition);		
	///今日持仓
	DUMP(Position);		
	///多头冻结
	DUMP(LongFrozen);		
	///空头冻结
	DUMP(ShortFrozen);		
	///开仓冻结金额
	DUMP(LongFrozenAmount);		
	///开仓冻结金额
	DUMP(ShortFrozenAmount);		
	///开仓量
	DUMP(OpenVolume);		
	///平仓量
	DUMP(CloseVolume);		
	///开仓金额
	DUMP(OpenAmount);		
	///平仓金额
	DUMP(CloseAmount);		
	///持仓成本
	DUMP(PositionCost);		
	///上次占用的保证金
	DUMP(PreMargin);		
	///占用的保证金
	DUMP(UseMargin);		
	///冻结的保证金
	DUMP(FrozenMargin);		
	///冻结的资金
	DUMP(FrozenCash);		
	///冻结的手续费
	DUMP(FrozenCommission);		
	///资金差额
	DUMP(CashIn);		
	///手续费
	DUMP(Commission);		
	///平仓盈亏
	DUMP(CloseProfit);		
	///持仓盈亏
	DUMP(PositionProfit);		
	///上次结算价
	DUMP(PreSettlementPrice);		
	///本次结算价
	DUMP(SettlementPrice);		
	///交易日
	DUMP(TradingDay);		
	///结算编号
	DUMP(SettlementID);		
	///开仓成本
	DUMP(OpenCost);		
	///交易所保证金
	DUMP(ExchangeMargin);		
	///组合成交形成的持仓
	DUMP(CombPosition);		
	///组合多头冻结
	DUMP(CombLongFrozen);		
	///组合空头冻结
	DUMP(CombShortFrozen);		
	///逐日盯市平仓盈亏
	DUMP(CloseProfitByDate);		
	///逐笔对冲平仓盈亏
	DUMP(CloseProfitByTrade);		
	///今日持仓
	DUMP(TodayPosition);		
	///保证金率
	DUMP(MarginRateByMoney);		
	///保证金率(按手数)
	DUMP(MarginRateByVolume);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpSequencialTradeField(std::string& buf,const CShfeFtdcSequencialTradeField& ctp)
{
	std::stringstream strDump;	
	///流中唯一的序列号
	DUMP(UniqSequenceNo);		
	///经纪公司代码
	DUMP(BrokerID);		
	///投资者代码
	DUMP(InvestorID);		
	///合约代码
	DUMP(InstrumentID);		
	///报单引用
	DUMP(OrderRef);		
	///用户代码
	DUMP(UserID);		
	///交易所代码
	DUMP(ExchangeID);		
	///成交编号
	DUMP(TradeID);		
	///买卖方向
	DUMP(Direction);		
	///报单编号
	DUMP(OrderSysID);		
	///会员代码
	DUMP(ParticipantID);		
	///客户代码
	DUMP(ClientID);		
	///交易角色
	DUMP(TradingRole);		
	///合约在交易所的代码
	DUMP(ExchangeInstID);		
	///开平标志
	DUMP(OffsetFlag);		
	///投机套保标志
	DUMP(HedgeFlag);		
	///价格
	DUMP(Price);		
	///数量
	DUMP(Volume);		
	///成交时期
	DUMP(TradeDate);		
	///成交时间
	DUMP(TradeTime);		
	///成交类型
	DUMP(TradeType);		
	///成交价来源
	DUMP(PriceSource);		
	///交易所交易员代码
	DUMP(TraderID);		
	///本地报单编号
	DUMP(OrderLocalID);		
	///结算会员编号
	DUMP(ClearingPartID);		
	///业务单元
	DUMP(BusinessUnit);		
	///序号
	DUMP(SequenceNo);		
	///交易日
	DUMP(TradingDay);		
	///结算编号
	DUMP(SettlementID);		
	///经纪公司报单编号
	DUMP(BrokerOrderSeq);		
	///成交来源
	DUMP(TradeSource);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpSettlementSessionField(std::string& buf,const CShfeFtdcSettlementSessionField& ctp)
{
	std::stringstream strDump;	
	///交易日
	DUMP(TradingDay);		
	///结算编号
	DUMP(SettlementID);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpTradeParamField(std::string& buf,const CShfeFtdcTradeParamField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///参数代码
	DUMP(TradeParamID);		
	///参数代码值
	DUMP(TradeParamValue);		
	///备注
	DUMP(Memo);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpTradeStatField(std::string& buf,const CShfeFtdcTradeStatField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///交易所品种合约代码组合(交易所代码使用前缀e:，格式如cu,e:SHFE,cu1105)
	DUMP(ExchangeProductInstID);		
	///投资者代码
	DUMP(InvestorID);		
	///总成交量
	DUMP(TotalVol);		
	///总成交额
	DUMP(TotalAmt);		
	///买成交量
	DUMP(BuyVol);		
	///买成交额
	DUMP(BuyAmt);		
	///卖成交量
	DUMP(SellVol);		
	///卖成交额
	DUMP(SellAmt);		
	///净买入成交量
	DUMP(NetVol);		
	///净买入成交额
	DUMP(NetAmt);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpTradingCodeField(std::string& buf,const CShfeFtdcTradingCodeField& ctp)
{
	std::stringstream strDump;	
	///投资者代码
	DUMP(InvestorID);		
	///经纪公司代码
	DUMP(BrokerID);		
	///交易所代码
	DUMP(ExchangeID);		
	///客户代码
	DUMP(ClientID);		
	///是否活跃
	DUMP(IsActive);		
	///交易编码类型
	DUMP(ClientIDType);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpUserPasswordUpdateField(std::string& buf,const CShfeFtdcUserPasswordUpdateField& ctp)
{
	std::stringstream strDump;	
	///经纪公司代码
	DUMP(BrokerID);		
	///用户代码
	DUMP(UserID);		
	///原来的口令
	DUMP(OldPassword);		
	///新的口令
	DUMP(NewPassword);		
	buf=strDump.str();
}	
void DumpFromCtp::DumpVaryMarketDataField(std::string& buf,const CShfeFtdcVaryMarketDataField& ctp)
{
	std::stringstream strDump;	
	///合约代码
	DUMP(InstrumentID);		
	///最新价
	DUMP(LastPrice);		
	buf=strDump.str();
}	
